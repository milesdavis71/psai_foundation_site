[
  {
    "type": "old version",
    "name": "Foundation 2",
    "description": "Documentation for Foundation 2.2.1",
    "link": "https://get.foundation/sites/docs/v/2.2.1/",
    "tags": [
      "old",
      "previous"
    ]
  },
  {
    "type": "old version",
    "name": "Foundation 3",
    "description": "Documentation for Foundation 3.2.5",
    "link": "https://get.foundation/sites/docs/v/3.2.5/",
    "tags": [
      "old",
      "previous"
    ]
  },
  {
    "type": "old version",
    "name": "Foundation 4",
    "description": "Documentation for Foundation 4.3.2",
    "link": "https://get.foundation/sites/docs/v/4.3.2/index.html",
    "tags": [
      "old",
      "previous"
    ]
  },
  {
    "type": "old version",
    "name": "Foundation 5",
    "description": "Documentation for Foundation 5.5.3",
    "link": "https://get.foundation/sites/docs/v/5.5.3/index.html",
    "tags": [
      "old",
      "previous"
    ]
  },
  {
    "type": "library",
    "name": "Motion UI",
    "description": "A Sass library for creating flexible UI transitions and animations.",
    "link": "motion-ui.html",
    "tags": []
  },
  {
    "type": "library",
    "name": "Panini",
    "description": "A flat file compiler that powers our prototyping template. Create pages with consistent layouts and reusable partials with ease.",
    "link": "panini.html",
    "tags": []
  },
  {
    "type": "library",
    "name": "Style Sherpa",
    "description": "Bundled with the ZURB Template, Style Sherpa makes it easy to create a style guide for your codebase, with just two files.",
    "link": "style-sherpa.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "Accessibility",
    "description": "Foundation for Sites is a fully-accessible framework. Here are some general guidelines to keep in mind as you make your pages accessible.",
    "link": "accessibility.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "Compatibility",
    "description": "Foundation is tested across many browsers and devices, and works back as far as IE9 and Android 2.",
    "link": "compatibility.html",
    "tags": [
      "support",
      "browser"
    ]
  },
  {
    "type": "page",
    "name": "Float Classes",
    "description": "Foundation includes a handful of helpful float classes to add common positioning behaviors to elements.",
    "link": "float-classes.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "Welcome to Foundation 6",
    "description": "We built Foundation for Sites to be the most advanced responsive front-end framework in the world.",
    "link": "index.html",
    "tags": [
      "index",
      "home"
    ]
  },
  {
    "type": "page",
    "name": "Installation",
    "description": "There are many ways to install Foundation, but if you're just getting started, we have a few suggestions.",
    "link": "installation.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "JavaScript Utilities",
    "description": "Our JavaScript Utility Libraries are easy to use and super helpful.",
    "link": "javascript-utilities.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "JavaScript",
    "description": "Our JavaScript is easy to set up and only requires jQuery to get going.",
    "link": "javascript.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "Kitchen Sink",
    "description": "Everything but.",
    "link": "kitchen-sink.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "Navigation",
    "description": "Foundation is bundled with many simple navigation patterns, which can be combined to form more complex, robust responsive navigation solutions.",
    "link": "navigation.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "Right-to-Left Support",
    "description": "Foundation can easily adapt its components to work with languages that read from right to left.",
    "link": "rtl.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "Sass",
    "description": "Foundation is written in Sass, which allows us to make the codebase customizable and flexible.",
    "link": "sass.html",
    "tags": []
  },
  {
    "type": "page",
    "name": "Starter Projects",
    "description": "We have a few starter project templates that can be installed with the Foundation CLI. You can also download them manually!",
    "link": "starter-projects.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Abide",
    "description": "Abide is a form validation library that extends the HTML5 validation API with custom validators.",
    "link": "abide.html",
    "tags": [
      "forms",
      "validation"
    ]
  },
  {
    "type": "component",
    "name": "Accordion Menu",
    "description": "Change a basic vertical Menu into a expandable accordion menu with the Accordion Menu plugin.",
    "link": "accordion-menu.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Accordion",
    "description": "Accordions are elements that help you organize and navigate multiple documents in a single container. They can be used for switching between items in the container.",
    "link": "accordion.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Badge",
    "description": "The badge is a basic component that displays a number. It's useful for calling out a number of unread items.",
    "link": "badge.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Breadcrumbs",
    "description": "Breadcrumbs come in handy to show a navigation trail for users clicking through your site.",
    "link": "breadcrumbs.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Button Group",
    "description": "Button groups are containers for related action items. They're great when you need to display a group of actions in a bar. These build off the button styles and work perfectly with the grid.",
    "link": "button-group.html",
    "tags": [
      "split button"
    ]
  },
  {
    "type": "component",
    "name": "Button",
    "description": "Buttons are convenient tools when you need more traditional actions. To that end, Foundation has many easy to use button styles that you can customize or override to fit your needs.",
    "link": "button.html",
    "tags": [
      "dropdown button"
    ]
  },
  {
    "type": "component",
    "name": "Callout",
    "description": "Callouts combine panels and alerts from Foundation 5 into one generic container component.",
    "link": "callout.html",
    "tags": [
      "panel",
      "alert"
    ]
  },
  {
    "type": "component",
    "name": "Card",
    "description": "Cards are a popular and flexible UI component.",
    "link": "card.html",
    "tags": [
      "card"
    ]
  },
  {
    "type": "component",
    "name": "Close Button",
    "description": "The humble close button can be used anywhere you need something to go away on click.",
    "link": "close-button.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Drilldown Menu",
    "description": "Drilldown is one of Foundation's three menu patterns, which converts a series of nested lists into a vertical drilldown menu.",
    "link": "drilldown-menu.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Dropdown Menu",
    "description": "Change a basic Menu into an expandable dropdown menu with the Dropdown Menu plugin.",
    "link": "dropdown-menu.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Dropdown",
    "description": "Dropdown panes are little happy sprites which can be revealed on click or hover.",
    "link": "dropdown.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Equalizer",
    "description": "Equalizer makes it dead simple to give multiple items equal height.",
    "link": "equalizer.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Flex Grid",
    "description": "New in Foundation 6 is a Flexbox-powered grid, which you can use instead of the traditional float grid.",
    "link": "flex-grid.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Flexbox Mode",
    "description": "For browsers with cutting-edge support, some of Foundation's key components can be converted to flexbox.",
    "link": "flexbox-mode.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Flexbox Utilities",
    "description": "Flexbox utility classes and mixins to make working with flexbox easier.",
    "link": "flexbox-utilities.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Forms",
    "description": "We set out to create an easy, powerful and versatile form layout system. A combination of form styles and the Foundation grid means you can do almost anything.",
    "link": "forms.html",
    "tags": [
      "input",
      "select",
      "radio",
      "checkbox"
    ]
  },
  {
    "type": "component",
    "name": "Global Styles",
    "description": "Our global CSS includes helpful resets to ensure consistent styling across browsers.",
    "link": "global.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "The Grid",
    "description": "Create powerful multi-device layouts quickly and easily with the default 12-column, nestable Foundation grid. If you're familiar with grid systems, you'll feel right at home. If not, you'll learn quickly.",
    "link": "grid.html",
    "tags": [
      "block grid"
    ]
  },
  {
    "type": "component",
    "name": "Interchange",
    "description": "Interchange uses media queries to dynamically load responsive content that is appropriate for the user's device.",
    "link": "interchange.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Label",
    "description": "Labels are useful inline styles that can be dropped into body copy to call out certain sections or to attach metadata. For example, you can attach a label that notes when something was updated.",
    "link": "label.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Magellan",
    "description": "Magellan allows you to create navigation that tracks the active section of a page your user is in. Pair it with our Sticky plugin to create a fixed navigation element.",
    "link": "magellan.html",
    "tags": [
      "navigation"
    ]
  },
  {
    "type": "component",
    "name": "Media Object",
    "description": "Media objects are super useful components for displaying an item, usually an image, alongside some content, usually text. You could put lists, grids, or even other media objects inside.",
    "link": "media-object.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Media Queries",
    "description": "CSS media queries allow us to adjust the display and orientation of content at different screen sizes.",
    "link": "media-queries.html",
    "tags": [
      "breakpoints"
    ]
  },
  {
    "type": "component",
    "name": "Menu",
    "description": "Our flexible menu component makes it easy to build many common navigation patterns, all with the same markup.",
    "link": "menu.html",
    "tags": [
      "navigation",
      "side nav",
      "sub nav",
      "icon bar",
      "top bar"
    ]
  },
  {
    "type": "component",
    "name": "Off-canvas",
    "description": "Off-canvas panels are positioned outside of the viewport and slide in when activated. Setting up an off-canvas layout in Foundation is super easy.",
    "link": "off-canvas.html",
    "tags": [
      "navigation",
      "offcanvas",
      "off-canvas",
      "nav",
      "title bar"
    ]
  },
  {
    "type": "component",
    "name": "Orbit",
    "description": "An image and content carousel with animation support and many customizable options.",
    "link": "orbit.html",
    "tags": [
      "slider",
      "carousel"
    ]
  },
  {
    "type": "component",
    "name": "Pagination",
    "description": "Pagination is a type of navigation that lets users click through pages of search results, products, or other related items.",
    "link": "pagination.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Progress Bar",
    "description": "Show your progress. A simple way to add progress bars to your layouts. You only need two HTML elements to make them and they're easy to customize.",
    "link": "progress-bar.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Prototyping Utilities",
    "description": "Quickly prototype layouts and UI with Foundation's Prototyping Utilities. These optional classes and mixins are great for quickly turning sketches and mockups into coded prototypes.",
    "link": "prototyping-utilities.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Responsive Accordion Tabs",
    "description": "Added in 6.3.0, use the Markup of the Accordion or Tabs components to create Responsive Accordion Tabs.",
    "link": "responsive-accordion-tabs.html",
    "tags": [
      "tabcordion"
    ]
  },
  {
    "type": "component",
    "name": "Responsive Embed",
    "description": "Wrap embedded content like videos, maps, and calendars in a responsive embed container to maintain the correct aspect ratio regardless of screen size.",
    "link": "responsive-embed.html",
    "tags": "flex video 'flex video'"
  },
  {
    "type": "component",
    "name": "Responsive Navigation",
    "description": "Our three Menu patterns form like Voltron into one responsive Menu plugin, which allows you to switch between patterns at different screen sizes.",
    "link": "responsive-navigation.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Reveal",
    "description": "Modal dialogs, or pop-up windows, are handy for prototyping and production. Foundation includes Reveal, our jQuery modal plugin, to make this easy for you.",
    "link": "reveal.html",
    "tags": [
      "modal"
    ]
  },
  {
    "type": "component",
    "name": "Sass Functions",
    "description": "Behind the scenes, Foundation is powered by a set of utility Sass functions that help us work with colors, units, selectors, and more.",
    "link": "sass-functions.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Sass Mixins",
    "description": "Mixins allow us to reuse code in various parts of the framework. Foundation includes mixins for clearfixes, visibility, icons, shapes, and more.",
    "link": "sass-mixins.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Slider",
    "description": "This handy lil slider is perfect for setting specific values within a range.",
    "link": "slider.html",
    "tags": [
      "range"
    ]
  },
  {
    "type": "component",
    "name": "Smooth Scroll",
    "description": "Allows internal links smooth scrolling.",
    "link": "smooth-scroll.html",
    "tags": [
      "navigation"
    ]
  },
  {
    "type": "component",
    "name": "Sticky",
    "description": "Stick nearly anything, anywhere you like!",
    "link": "sticky.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Switch",
    "description": "Create pure CSS3 On/Off switches with animated transitions. Now you can tell your users to flip the switch or switch off.",
    "link": "switch.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Tables",
    "description": "Okay, they're not the sexiest things ever, but tables get the job done (for tabular data, of course). They have responsive modifiers to help solve some of your layout issues based on your tables needs.",
    "link": "table.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Tabs",
    "description": "Tabs are elements that help you organize and navigate multiple documents in a single container. They can be used for switching between items in the container.",
    "link": "tabs.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Thumbnail",
    "description": "If you're going to use an image as an anchor, we've got you covered. All you gotta do is add one class to your image and voilà!",
    "link": "thumbnail.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Toggler",
    "description": "Toggler makes it easy to toggle CSS or animate any element with a click.",
    "link": "toggler.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Tooltip",
    "description": "Tooltips? More like <em>Cooltips</em>. But really though, tooltips are nifty for displaying extended information for a term or action on a page.",
    "link": "tooltip.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Top Bar",
    "description": "The new top bar is a simpler wrapper around our flexible menu components.",
    "link": "top-bar.html",
    "tags": []
  },
  {
    "type": "component",
    "name": "Base Typography",
    "description": "Typography in Foundation 6 is meant to make your life easier by providing clean, attractive, simple default styles for all of the most basic typographical elements.",
    "link": "typography-base.html",
    "tags": [
      "paragraph",
      "heading",
      "link",
      "definition",
      "blockquote",
      "abbreviation",
      "acronym",
      "code",
      "keystroke"
    ]
  },
  {
    "type": "component",
    "name": "Typography Helpers",
    "description": "Our helper classes allow you to scaffold certain typographic styles faster.",
    "link": "typography-helpers.html",
    "tags": [
      "alignment",
      "subheader",
      "lead",
      "statistic"
    ]
  },
  {
    "type": "component",
    "name": "Visibility Classes",
    "description": "Visibility classes let you show or hide elements based on screen size or device orientation. You can also use visibility classes to control which elements users see depending on their browsing environment.",
    "link": "visibility.html",
    "tags": [
      "hide",
      "show"
    ]
  },
  {
    "type": "component",
    "name": "XY Grid",
    "description": "A fully reworked new grid system in v6.4 which has all the variety inbuilt in the form of multiple grid types which includes margin grid, padding grid, frame grid, block grid and vertical grid.",
    "link": "xy-grid.html",
    "tags": []
  },
  {
    "name": "$abide-inputs",
    "type": "sass variable",
    "description": "Sets if error styles should be added to inputs.",
    "link": "abide.html#sass-variables"
  },
  {
    "name": "$abide-labels",
    "type": "sass variable",
    "description": "Sets if error styles should be added to labels.",
    "link": "abide.html#sass-variables"
  },
  {
    "name": "$input-background-invalid",
    "type": "sass variable",
    "description": "Background color to use for invalid text inputs.",
    "link": "abide.html#sass-variables"
  },
  {
    "name": "$form-label-color-invalid",
    "type": "sass variable",
    "description": "Color to use for labels of invalid inputs.",
    "link": "abide.html#sass-variables"
  },
  {
    "name": "$input-error-color",
    "type": "sass variable",
    "description": "Default font color for form error text.",
    "link": "abide.html#sass-variables"
  },
  {
    "name": "$input-error-font-size",
    "type": "sass variable",
    "description": "Default font size for form error text.",
    "link": "abide.html#sass-variables"
  },
  {
    "name": "$input-error-font-weight",
    "type": "sass variable",
    "description": "Default font weight for form error text.",
    "link": "abide.html#sass-variables"
  },
  {
    "name": "$accordionmenu-padding",
    "type": "sass variable",
    "description": "Sets accordion menu padding.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-nested-margin",
    "type": "sass variable",
    "description": "Sets accordion menu nested margin",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-submenu-padding",
    "type": "sass variable",
    "description": "Sets accordion menu submenu padding.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-arrows",
    "type": "sass variable",
    "description": "Sets if accordion menus have the default arrow styles.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-arrow-color",
    "type": "sass variable",
    "description": "Sets accordion menu arrow color if arrow is used.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-item-background",
    "type": "sass variable",
    "description": "Sets accordion menu item padding.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-border",
    "type": "sass variable",
    "description": "Sets accordion menu item border.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-submenu-toggle-background",
    "type": "sass variable",
    "description": "Sets accordion menu item padding.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordion-submenu-toggle-border",
    "type": "sass variable",
    "description": "Sets accordion menu item padding.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-submenu-toggle-width",
    "type": "sass variable",
    "description": "Sets accordion menu submenu toggle background width.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-submenu-toggle-height",
    "type": "sass variable",
    "description": "Sets accordion menu submenu toggle background height.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordionmenu-arrow-size",
    "type": "sass variable",
    "description": "Sets accordion menu arrow size if arrow is used.",
    "link": "accordion-menu.html#sass-variables"
  },
  {
    "name": "$accordion-background",
    "type": "sass variable",
    "description": "Default background color of an accordion group.",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-plusminus",
    "type": "sass variable",
    "description": "If true`, adds plus and minus icons to the side of each accordion title.\n",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-plus-content",
    "type": "sass variable",
    "description": "Content for the plus icon when $accordion-plusminus` is `true`\n",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-minus-content",
    "type": "sass variable",
    "description": "Content for the minus icon when $accordion-plusminus` is `true`\n",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-title-font-size",
    "type": "sass variable",
    "description": "Font size of accordion titles.",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-item-color",
    "type": "sass variable",
    "description": "Default text color for items in a Menu.",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-item-background-hover",
    "type": "sass variable",
    "description": "Default background color on hover for items in a Menu.",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-item-padding",
    "type": "sass variable",
    "description": "Default padding of an accordion item.",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-content-background",
    "type": "sass variable",
    "description": "Default background color of tab content.",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-content-border",
    "type": "sass variable",
    "description": "Default border color of tab content.",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-content-color",
    "type": "sass variable",
    "description": "Default text color of tab content.",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$accordion-content-padding",
    "type": "sass variable",
    "description": "Default padding for tab content.",
    "link": "accordion.html#sass-variables"
  },
  {
    "name": "$badge-background",
    "type": "sass variable",
    "description": "Default background color for badges.",
    "link": "badge.html#sass-variables"
  },
  {
    "name": "$badge-color",
    "type": "sass variable",
    "description": "Default text color for badges.",
    "link": "badge.html#sass-variables"
  },
  {
    "name": "$badge-color-alt",
    "type": "sass variable",
    "description": "Alternate text color for badges.",
    "link": "badge.html#sass-variables"
  },
  {
    "name": "$badge-palette",
    "type": "sass variable",
    "description": "Coloring classes. A map of classes to output in your CSS, like .secondary`, `.success`, and so on.\n",
    "link": "badge.html#sass-variables"
  },
  {
    "name": "$badge-padding",
    "type": "sass variable",
    "description": "Default padding inside badges.",
    "link": "badge.html#sass-variables"
  },
  {
    "name": "$badge-minwidth",
    "type": "sass variable",
    "description": "Minimum width of a badge.",
    "link": "badge.html#sass-variables"
  },
  {
    "name": "$badge-font-size",
    "type": "sass variable",
    "description": "Default font size for badges.",
    "link": "badge.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-margin",
    "type": "sass variable",
    "description": "Margin around a breadcrumbs container.",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-font-size",
    "type": "sass variable",
    "description": "Font size of breadcrumb links.",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-color",
    "type": "sass variable",
    "description": "Color of breadcrumb links.",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-color-current",
    "type": "sass variable",
    "description": "Color of the active breadcrumb link.",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-color-disabled",
    "type": "sass variable",
    "description": "Opacity of disabled breadcrumb links.",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-margin",
    "type": "sass variable",
    "description": "Margin between breadcrumb items.",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-uppercase",
    "type": "sass variable",
    "description": "If true`, makes breadcrumb links uppercase.\n",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-separator",
    "type": "sass variable",
    "description": "If true`, adds a seperator between breadcrumb links.\n",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-separator-item",
    "type": "sass variable",
    "description": "Used character for the breadcrumb separator.",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-separator-item-rtl",
    "type": "sass variable",
    "description": "Used character for the breadcrumb separator in rtl mode.",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$breadcrumbs-item-separator-color",
    "type": "sass variable",
    "description": "Color of breadcrumb item.",
    "link": "breadcrumbs.html#sass-variables"
  },
  {
    "name": "$buttongroup-margin",
    "type": "sass variable",
    "description": "Margin for button groups.",
    "link": "button-group.html#sass-variables"
  },
  {
    "name": "$buttongroup-spacing",
    "type": "sass variable",
    "description": "Margin between buttons in a button group.",
    "link": "button-group.html#sass-variables"
  },
  {
    "name": "$buttongroup-child-selector",
    "type": "sass variable",
    "description": "Selector for the buttons inside a button group.",
    "link": "button-group.html#sass-variables"
  },
  {
    "name": "$buttongroup-expand-max",
    "type": "sass variable",
    "description": "Maximum number of buttons that can be in an even-width button group. (Only needed when $global-flexbox: false;)",
    "link": "button-group.html#sass-variables"
  },
  {
    "name": "$buttongroup-radius-on-each",
    "type": "sass variable",
    "description": "Determines if $button-radius is applied to each button or the button group as a whole. Use $global-radius in _settings.scss to change radius.",
    "link": "button-group.html#sass-variables"
  },
  {
    "name": "$button-font-family",
    "type": "sass variable",
    "description": "Font family for button elements.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-font-weight",
    "type": "sass variable",
    "description": "Font weight for button elements.Ignored if null (default)\n",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-padding",
    "type": "sass variable",
    "description": "Padding inside buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-margin",
    "type": "sass variable",
    "description": "Margin around buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-fill",
    "type": "sass variable",
    "description": "Default fill for buttons. Can either be solid` or `hollow`.\n",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-background",
    "type": "sass variable",
    "description": "Default background color for buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-background-hover",
    "type": "sass variable",
    "description": "Background color on hover for buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-color",
    "type": "sass variable",
    "description": "Font color for buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-color-alt",
    "type": "sass variable",
    "description": "Alternative font color for buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-radius",
    "type": "sass variable",
    "description": "Border radius for buttons, defaulted to global-radius.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-border",
    "type": "sass variable",
    "description": "Border for buttons, transparent by default",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-hollow-border-width",
    "type": "sass variable",
    "description": "Border width for hollow outline buttons",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-sizes",
    "type": "sass variable",
    "description": "Sizes for buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-palette",
    "type": "sass variable",
    "description": "Coloring classes. A map of classes to output in your CSS, like .secondary`, `.success`, and so on.\n",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-opacity-disabled",
    "type": "sass variable",
    "description": "opacity for a disabled button.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-background-hover-lightness",
    "type": "sass variable",
    "description": "Background color lightness on hover for buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-hollow-hover-lightness",
    "type": "sass variable",
    "description": "Color lightness on hover for hollow buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-transition",
    "type": "sass variable",
    "description": "transitions for buttons.",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$button-responsive-expanded",
    "type": "sass variable",
    "description": "Additional responsive classes for .expanded",
    "link": "button.html#sass-variables"
  },
  {
    "name": "$callout-background",
    "type": "sass variable",
    "description": "Default background color.",
    "link": "callout.html#sass-variables"
  },
  {
    "name": "$callout-background-fade",
    "type": "sass variable",
    "description": "Default fade value for callout backgrounds.",
    "link": "callout.html#sass-variables"
  },
  {
    "name": "$callout-border",
    "type": "sass variable",
    "description": "Default border style for callouts.",
    "link": "callout.html#sass-variables"
  },
  {
    "name": "$callout-margin",
    "type": "sass variable",
    "description": "Default bottom margin for callouts.",
    "link": "callout.html#sass-variables"
  },
  {
    "name": "$callout-sizes",
    "type": "sass variable",
    "description": "Sizes for Callout paddings.",
    "link": "callout.html#sass-variables"
  },
  {
    "name": "$callout-font-color",
    "type": "sass variable",
    "description": "Default font color for callouts.",
    "link": "callout.html#sass-variables"
  },
  {
    "name": "$callout-font-color-alt",
    "type": "sass variable",
    "description": "Default font color for callouts, if the callout has a dark background.",
    "link": "callout.html#sass-variables"
  },
  {
    "name": "$callout-radius",
    "type": "sass variable",
    "description": "Default border radius for callouts.",
    "link": "callout.html#sass-variables"
  },
  {
    "name": "$callout-link-tint",
    "type": "sass variable",
    "description": "Amount to tint links used within colored panels. Set to false` to disable this feature.\n",
    "link": "callout.html#sass-variables"
  },
  {
    "name": "$card-background",
    "type": "sass variable",
    "description": "Default background color.",
    "link": "card.html#sass-variables"
  },
  {
    "name": "$card-font-color",
    "type": "sass variable",
    "description": "Default font color for cards.",
    "link": "card.html#sass-variables"
  },
  {
    "name": "$card-divider-background",
    "type": "sass variable",
    "description": "Default background.",
    "link": "card.html#sass-variables"
  },
  {
    "name": "$card-border",
    "type": "sass variable",
    "description": "Default border style.",
    "link": "card.html#sass-variables"
  },
  {
    "name": "$card-shadow",
    "type": "sass variable",
    "description": "Default card shadow.",
    "link": "card.html#sass-variables"
  },
  {
    "name": "$card-border-radius",
    "type": "sass variable",
    "description": "Default border radius.",
    "link": "card.html#sass-variables"
  },
  {
    "name": "$card-padding",
    "type": "sass variable",
    "description": "Default padding.",
    "link": "card.html#sass-variables"
  },
  {
    "name": "$card-margin-bottom",
    "type": "sass variable",
    "description": "Default bottom margin.",
    "link": "card.html#sass-variables"
  },
  {
    "name": "$closebutton-position",
    "type": "sass variable",
    "description": "Default position of the close button. The first value should be right` or `left`, and the second value should be `top` or `bottom`.\n",
    "link": "close-button.html#sass-variables"
  },
  {
    "name": "$closebutton-z-index",
    "type": "sass variable",
    "description": "Default z-index for a close button.",
    "link": "close-button.html#sass-variables"
  },
  {
    "name": "$closebutton-default-size",
    "type": "sass variable",
    "description": "Button size to use as default",
    "link": "close-button.html#sass-variables"
  },
  {
    "name": "$closebutton-offset-horizontal",
    "type": "sass variable",
    "description": "Right (or left) offset(s) for a close button.",
    "link": "close-button.html#sass-variables"
  },
  {
    "name": "$closebutton-offset-vertical",
    "type": "sass variable",
    "description": "Top (or bottom) offset(s) for a close button.",
    "link": "close-button.html#sass-variables"
  },
  {
    "name": "$closebutton-size",
    "type": "sass variable",
    "description": "Size(s) of the close button. Used to generate sizing modifiers.",
    "link": "close-button.html#sass-variables"
  },
  {
    "name": "$closebutton-lineheight",
    "type": "sass variable",
    "description": "The line-height of the close button. It affects the spacing of the element.",
    "link": "close-button.html#sass-variables"
  },
  {
    "name": "$closebutton-color",
    "type": "sass variable",
    "description": "Default color of the close button.",
    "link": "close-button.html#sass-variables"
  },
  {
    "name": "$closebutton-color-hover",
    "type": "sass variable",
    "description": "Default color of the close button when being hovered on.",
    "link": "close-button.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-arrows",
    "type": "sass variable",
    "description": "Enables arrows for items with dropdown menus.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-arrow-color",
    "type": "sass variable",
    "description": "Sets dropdown menu arrow color if arrow is used.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-arrow-size",
    "type": "sass variable",
    "description": "Sets dropdown menu arrow size if arrow is used.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-arrow-padding",
    "type": "sass variable",
    "description": "Sets dropdown menu arrow padding for aligning the arrow correctly.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-min-width",
    "type": "sass variable",
    "description": "Minimum width of dropdown sub-menus.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-background",
    "type": "sass variable",
    "description": "Background color for top level items.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-submenu-background",
    "type": "sass variable",
    "description": "Background color for dropdowns.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-padding",
    "type": "sass variable",
    "description": "Padding for top level items.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-nested-margin",
    "type": "sass variable",
    "description": "Sets dropdown menu nested margin",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-submenu-padding",
    "type": "sass variable",
    "description": "Padding for sub-menu items.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdownmenu-border",
    "type": "sass variable",
    "description": "Border for dropdown sub-menus.",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdown-menu-item-color-active",
    "type": "sass variable",
    "description": "Text color of an active dropdown menu item. Explicit override for menu defaults",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdown-menu-item-background-active",
    "type": "sass variable",
    "description": "Background color of an active dropdown menu item. Explicit override for menu defaults",
    "link": "dropdown-menu.html#sass-variables"
  },
  {
    "name": "$dropdown-padding",
    "type": "sass variable",
    "description": "Padding for dropdown panes.",
    "link": "dropdown.html#sass-variables"
  },
  {
    "name": "$dropdown-background",
    "type": "sass variable",
    "description": "Background for dropdown panes.",
    "link": "dropdown.html#sass-variables"
  },
  {
    "name": "$dropdown-border",
    "type": "sass variable",
    "description": "Border for dropdown panes.",
    "link": "dropdown.html#sass-variables"
  },
  {
    "name": "$dropdown-font-size",
    "type": "sass variable",
    "description": "Font size for dropdown panes.",
    "link": "dropdown.html#sass-variables"
  },
  {
    "name": "$dropdown-width",
    "type": "sass variable",
    "description": "Width for dropdown panes.",
    "link": "dropdown.html#sass-variables"
  },
  {
    "name": "$dropdown-radius",
    "type": "sass variable",
    "description": "Border radius dropdown panes.",
    "link": "dropdown.html#sass-variables"
  },
  {
    "name": "$dropdown-sizes",
    "type": "sass variable",
    "description": "Sizes for dropdown panes. Each size is a CSS class you can apply.",
    "link": "dropdown.html#sass-variables"
  },
  {
    "name": "$flex-source-ordering-count",
    "type": "sass variable",
    "description": "Default value for the count of source ordering\n",
    "link": "flexbox-mode.html#sass-variables"
  },
  {
    "name": "$flexbox-responsive-breakpoints",
    "type": "sass variable",
    "description": "Quickly disable/enable Responsive breakpoints for Vanilla Flex Helpers.",
    "link": "flexbox-mode.html#sass-variables"
  },
  {
    "name": "$flex-source-ordering-count",
    "type": "sass variable",
    "description": "Default value for the count of source ordering\n",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$flexbox-responsive-breakpoints",
    "type": "sass variable",
    "description": "Quickly disable/enable Responsive breakpoints for Vanilla Flex Helpers.",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$xy-grid",
    "type": "sass variable",
    "description": "Enables the XY grid.",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$grid-container",
    "type": "sass variable",
    "description": "The maximum width of a grid container.",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$grid-columns",
    "type": "sass variable",
    "description": "The number of columns used in the grid.",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$grid-margin-gutters",
    "type": "sass variable",
    "description": "The amount of margin between cells at different screen sizes when using the margin grid. To use just one size, set the variable to a number instead of a map.",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$grid-padding-gutters",
    "type": "sass variable",
    "description": "The amount of padding in cells at different screen sizes when using the padding grid. To use just one size, set the variable to a number instead of a map.",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$grid-container-padding",
    "type": "sass variable",
    "description": "The amount of padding to use when padding the grid-container.",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$grid-container-max",
    "type": "sass variable",
    "description": "The maximum width to apply to a grid container",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$xy-block-grid-max",
    "type": "sass variable",
    "description": "The maximum number of cells in an XY block grid.",
    "link": "flexbox-utilities.html#sass-variables"
  },
  {
    "name": "$fieldset-border",
    "type": "sass variable",
    "description": "Default border around custom fieldsets.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$fieldset-padding",
    "type": "sass variable",
    "description": "Default padding inside custom fieldsets.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$fieldset-margin",
    "type": "sass variable",
    "description": "Default margin around custom fieldsets.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$legend-padding",
    "type": "sass variable",
    "description": "Default padding between the legend text and fieldset border.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$form-spacing",
    "type": "sass variable",
    "description": "Global spacing for form elements.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$helptext-color",
    "type": "sass variable",
    "description": "Default color for help text.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$helptext-font-size",
    "type": "sass variable",
    "description": "Default font size for help text.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$helptext-font-style",
    "type": "sass variable",
    "description": "Default font style for help text.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-prefix-color",
    "type": "sass variable",
    "description": "Color of labels prefixed to an input.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-prefix-background",
    "type": "sass variable",
    "description": "Background color of labels prefixed to an input.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-prefix-border",
    "type": "sass variable",
    "description": "Border around labels prefixed to an input.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-prefix-padding",
    "type": "sass variable",
    "description": "Left/right padding of an pre/postfixed input label",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$form-label-color",
    "type": "sass variable",
    "description": "Color for form labels.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$form-label-font-size",
    "type": "sass variable",
    "description": "Font size for form labels.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$form-label-font-weight",
    "type": "sass variable",
    "description": "Font weight for form labels.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$form-label-line-height",
    "type": "sass variable",
    "description": "Line height for form labels. The higher the number, the more space between the label and its input field.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$select-background",
    "type": "sass variable",
    "description": "Background color for select menus.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$select-triangle-color",
    "type": "sass variable",
    "description": "Color of the dropdown triangle inside select menus. Set to transparent` to remove it entirely.\n",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$select-radius",
    "type": "sass variable",
    "description": "Default radius for select menus.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-color",
    "type": "sass variable",
    "description": "Font color of text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-placeholder-color",
    "type": "sass variable",
    "description": "Font color of placeholder text within text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-font-family",
    "type": "sass variable",
    "description": "Font family of text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-font-size",
    "type": "sass variable",
    "description": "Font size of text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-font-weight",
    "type": "sass variable",
    "description": "Font weight of text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-line-height",
    "type": "sass variable",
    "description": "Line height of text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-background",
    "type": "sass variable",
    "description": "Background color of text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-background-focus",
    "type": "sass variable",
    "description": "Background color of focused of text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-background-disabled",
    "type": "sass variable",
    "description": "Background color of disabled text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-border",
    "type": "sass variable",
    "description": "Border around text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-border-focus",
    "type": "sass variable",
    "description": "Border around focused text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-padding",
    "type": "sass variable",
    "description": "Padding of text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-shadow",
    "type": "sass variable",
    "description": "Box shadow inside text inputs when not focused.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-shadow-focus",
    "type": "sass variable",
    "description": "Box shadow outside text inputs when focused.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-cursor-disabled",
    "type": "sass variable",
    "description": "Cursor to use when hovering over a disabled text input.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-transition",
    "type": "sass variable",
    "description": "Properties to transition on text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-number-spinners",
    "type": "sass variable",
    "description": "Enables the up/down buttons that Chrome and Firefox add to &lt;input type=&#39;number&#39;&gt;` elements.\n",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$input-radius",
    "type": "sass variable",
    "description": "Radius for text inputs.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$form-button-radius",
    "type": "sass variable",
    "description": "Border radius for form buttons, defaulted to global-radius.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$meter-height",
    "type": "sass variable",
    "description": "Height of a &lt;meter&gt;` element.\n",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$meter-radius",
    "type": "sass variable",
    "description": "Border radius of a &lt;meter&gt;` element.\n",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$meter-background",
    "type": "sass variable",
    "description": "Background color of a &lt;meter&gt;` element.\n",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$meter-fill-good",
    "type": "sass variable",
    "description": "Meter fill for an optimal value in a &lt;meter&gt;` element.\n",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$meter-fill-medium",
    "type": "sass variable",
    "description": "Meter fill for an average value in a &lt;meter&gt;` element.\n",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$meter-fill-bad",
    "type": "sass variable",
    "description": "Meter fill for a suboptimal value in a &lt;meter&gt;` element.\n",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$progress-height",
    "type": "sass variable",
    "description": "Height of a progress bar.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$progress-background",
    "type": "sass variable",
    "description": "Background color of a progress bar.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$progress-margin-bottom",
    "type": "sass variable",
    "description": "Bottom margin of a progress bar.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$progress-meter-background",
    "type": "sass variable",
    "description": "Default color of a progress bar&#39;s meter.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$progress-radius",
    "type": "sass variable",
    "description": "Default radius of a progress bar.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$slider-height",
    "type": "sass variable",
    "description": "Default height of the slider.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$slider-background",
    "type": "sass variable",
    "description": "Default background color of the slider&#39;s track.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$slider-fill-background",
    "type": "sass variable",
    "description": "Default color of the active fill color of the slider.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$slider-handle-height",
    "type": "sass variable",
    "description": "Default height of the handle of the slider.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$slider-handle-width",
    "type": "sass variable",
    "description": "Default width of the handle of the slider.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$slider-handle-background",
    "type": "sass variable",
    "description": "Default color of the handle for the slider.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$slider-opacity-disabled",
    "type": "sass variable",
    "description": "Default fade amount of a disabled slider.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$slider-radius",
    "type": "sass variable",
    "description": "Default radius for slider.",
    "link": "forms.html#sass-variables"
  },
  {
    "name": "$global-font-size",
    "type": "sass variable",
    "description": "Font size attribute applied to &lt;html&gt;` and `&lt;body&gt;`. We use 100% by default so the value is inherited from the user&#39;s browser settings.\n",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-width",
    "type": "sass variable",
    "description": "Global width of your site. Used by the grid to determine row width.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-lineheight",
    "type": "sass variable",
    "description": "Default line height for all type. $global-lineheight` is 24px while `$global-font-size` is 16px\n",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$foundation-palette",
    "type": "sass variable",
    "description": "Colors used for buttons, callouts, links, etc. There must always be a color called primary`.\n",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$light-gray",
    "type": "sass variable",
    "description": "Color used for light gray UI items.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$medium-gray",
    "type": "sass variable",
    "description": "Color used for medium gray UI items.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$dark-gray",
    "type": "sass variable",
    "description": "Color used for dark gray UI items.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$black",
    "type": "sass variable",
    "description": "Color used for black ui items.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$white",
    "type": "sass variable",
    "description": "Color used for white ui items.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$body-background",
    "type": "sass variable",
    "description": "Background color of the body.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$body-font-color",
    "type": "sass variable",
    "description": "Text color of the body.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$body-font-family",
    "type": "sass variable",
    "description": "Font stack of the body.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$body-safe-padding",
    "type": "sass variable",
    "description": "Set to true` to enable safe padding on the body for non-rectangular devices (i.e. phones with notches)\n",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$body-antialiased",
    "type": "sass variable",
    "description": "Set to true` to enable antialiased type, using the `-webkit-font-smoothing` and `-moz-osx-font-smoothing` CSS properties.\n",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-margin",
    "type": "sass variable",
    "description": "Global value used for margin on components.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-padding",
    "type": "sass variable",
    "description": "Global value used for padding on components.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-position",
    "type": "sass variable",
    "description": "Global value used for positioning on components.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-weight-normal",
    "type": "sass variable",
    "description": "Global font weight used for normal type.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-weight-bold",
    "type": "sass variable",
    "description": "Global font weight used for bold type.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-radius",
    "type": "sass variable",
    "description": "Global value used for all elements that have a border radius.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-menu-padding",
    "type": "sass variable",
    "description": "Global value used for all menu styles. Can be overwritten at individual menu component level.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-menu-nested-margin",
    "type": "sass variable",
    "description": "Global value used for all menu styles. Nested margin for submenu.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-text-direction",
    "type": "sass variable",
    "description": "Sets the text direction of the CSS. Can be either ltr` or `rtl`.\n",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-flexbox",
    "type": "sass variable",
    "description": "Enables flexbox for components that support it.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-prototype-breakpoints",
    "type": "sass variable",
    "description": "Enabled responsive breakpoints for prototypes if applicable",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-button-cursor",
    "type": "sass variable",
    "description": "Button cursor&#39;s value, auto` by default\n",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$global-color-pick-contrast-tolerance",
    "type": "sass variable",
    "description": "Global tolerance for color pick contrast.",
    "link": "global.html#sass-variables"
  },
  {
    "name": "$grid-row-width",
    "type": "sass variable",
    "description": "The maximum width of a row.",
    "link": "grid.html#sass-variables"
  },
  {
    "name": "$grid-column-count",
    "type": "sass variable",
    "description": "The default column count of a grid. Changing this value affects the logic of the grid mixins, and the number of CSS classes output.",
    "link": "grid.html#sass-variables"
  },
  {
    "name": "$grid-column-gutter",
    "type": "sass variable",
    "description": "The amount of space between columns at different screen sizes. To use just one size, set the variable to a number instead of a map.",
    "link": "grid.html#sass-variables"
  },
  {
    "name": "$grid-column-align-edge",
    "type": "sass variable",
    "description": "If true`, the last column in a row will align to the opposite edge of the row.\n",
    "link": "grid.html#sass-variables"
  },
  {
    "name": "$grid-column-alias",
    "type": "sass variable",
    "description": "Selector used for an alias of column (with @extend). If false`, no alias is created.\n",
    "link": "grid.html#sass-variables"
  },
  {
    "name": "$block-grid-max",
    "type": "sass variable",
    "description": "The highest number of .x-up` classes available when using the block grid CSS.\n",
    "link": "grid.html#sass-variables"
  },
  {
    "name": "$label-background",
    "type": "sass variable",
    "description": "Default background color for labels.",
    "link": "label.html#sass-variables"
  },
  {
    "name": "$label-color",
    "type": "sass variable",
    "description": "Default text color for labels.",
    "link": "label.html#sass-variables"
  },
  {
    "name": "$label-color-alt",
    "type": "sass variable",
    "description": "Alternate text color for labels.",
    "link": "label.html#sass-variables"
  },
  {
    "name": "$label-palette",
    "type": "sass variable",
    "description": "Coloring classes. A map of classes to output in your CSS, like .secondary`, `.success`, and so on.\n",
    "link": "label.html#sass-variables"
  },
  {
    "name": "$label-font-size",
    "type": "sass variable",
    "description": "Default font size for labels.",
    "link": "label.html#sass-variables"
  },
  {
    "name": "$label-padding",
    "type": "sass variable",
    "description": "Default padding inside labels.",
    "link": "label.html#sass-variables"
  },
  {
    "name": "$label-radius",
    "type": "sass variable",
    "description": "Default radius of labels.",
    "link": "label.html#sass-variables"
  },
  {
    "name": "$mediaobject-margin-bottom",
    "type": "sass variable",
    "description": "Bottom margin of a media object.",
    "link": "media-object.html#sass-variables"
  },
  {
    "name": "$mediaobject-section-padding",
    "type": "sass variable",
    "description": "Left and right padding on sections within a media object.",
    "link": "media-object.html#sass-variables"
  },
  {
    "name": "$mediaobject-image-width-stacked",
    "type": "sass variable",
    "description": "Width of images within a media object, when the object is stacked vertically. Set to &#39;auto&#39; to use the image&#39;s natural width.",
    "link": "media-object.html#sass-variables"
  },
  {
    "name": "$-zf-size",
    "type": "sass variable",
    "description": "Patch to fix issue #12080",
    "link": "media-queries.html#sass-variables"
  },
  {
    "name": "$breakpoints",
    "type": "sass variable",
    "description": "A list of named breakpoints. You can use these with the breakpoint()` mixin to quickly create media queries.\n",
    "link": "media-queries.html#sass-variables"
  },
  {
    "name": "$breakpoints-hidpi",
    "type": "sass variable",
    "description": "A list of named HiDPI breakpoints. You can use these with the breakpoint()` mixin to quickly create media queries for resolutions.\nValues must represent the device pixels / web pixels ration and be unitless or in DPPX.\n",
    "link": "media-queries.html#sass-variables"
  },
  {
    "name": "$print-breakpoint",
    "type": "sass variable",
    "description": "The largest named breakpoint in which to include print as a media type",
    "link": "media-queries.html#sass-variables"
  },
  {
    "name": "$breakpoint-classes",
    "type": "sass variable",
    "description": "All of the names in this list will be output as classes in your CSS, like .small-12`, `.medium-6`, and so on. Each value in this list must also be in the `$breakpoints` map.\n",
    "link": "media-queries.html#sass-variables"
  },
  {
    "name": "$menu-margin",
    "type": "sass variable",
    "description": "Margin of a menu.",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-nested-margin",
    "type": "sass variable",
    "description": "Left-hand margin of a nested menu.",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-items-padding",
    "type": "sass variable",
    "description": "Padding for items in a pill menu.",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-simple-margin",
    "type": "sass variable",
    "description": "margin for items in a simple menu.",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-item-color-active",
    "type": "sass variable",
    "description": "Text color of an active menu item.",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-item-color-alt-active",
    "type": "sass variable",
    "description": "Alternative text color of an active menu item..",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-item-background-active",
    "type": "sass variable",
    "description": "Background color of an active menu item.",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-icon-spacing",
    "type": "sass variable",
    "description": "Spacing between an icon and text in a menu item.",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-state-back-compat",
    "type": "sass variable",
    "description": "Backward compatibility for menu state. If true, this duplicate active` with `is-active`.\nBut please note that `active` will be removed in upcoming versions.\n",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-centered-back-compat",
    "type": "sass variable",
    "description": "Backward compatibility for menu centered. If true, this duplicate .menu-centered &gt; .menu` with `.menu.align-center`.\nBut please note that `menu-centered` will be removed in upcoming versions.\n",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$menu-icons-back-compat",
    "type": "sass variable",
    "description": "Backward compatibility for using icon-*` classes without `.icons` classes\nBut please note that this backward compatibility will be removed in upcoming versions.\n",
    "link": "menu.html#sass-variables"
  },
  {
    "name": "$offcanvas-sizes",
    "type": "sass variable",
    "description": "Width map of a left/right off-canvas panel.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-vertical-sizes",
    "type": "sass variable",
    "description": "Height map of a top/bottom off-canvas panel.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-background",
    "type": "sass variable",
    "description": "Background color of an off-canvas panel.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-shadow",
    "type": "sass variable",
    "description": "Box shadow for the off-canvas overlap panel.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-inner-shadow-size",
    "type": "sass variable",
    "description": "Inner box shadow size for the off-canvas push panel.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-inner-shadow-color",
    "type": "sass variable",
    "description": "Inner box shadow color for the off-canvas push panel.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-overlay-zindex",
    "type": "sass variable",
    "description": "Z-index of an off-canvas content overlay.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-push-zindex",
    "type": "sass variable",
    "description": "Z-index of an off-canvas panel with the push` transition.\n",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-overlap-zindex",
    "type": "sass variable",
    "description": "Z-index of an off-canvas panel with the overlap` transition.\n",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-reveal-zindex",
    "type": "sass variable",
    "description": "Z-index of an off-canvas panel using the reveal-for-*` classes or mixin.\n",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-transition-length",
    "type": "sass variable",
    "description": "Length of the animation on an off-canvas panel.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-transition-timing",
    "type": "sass variable",
    "description": "Timing function of the animation on an off-canvas panel.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-fixed-reveal",
    "type": "sass variable",
    "description": "If true`, a revealed off-canvas will be fixed-position, and scroll with the screen.\n",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$offcanvas-exit-background",
    "type": "sass variable",
    "description": "Background color for the overlay that appears when an off-canvas panel is open.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$maincontent-class",
    "type": "sass variable",
    "description": "CSS class used for the main content area. The off-canvas mixins use this to target the page content.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$titlebar-background",
    "type": "sass variable",
    "description": "Background color of a title bar.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$titlebar-color",
    "type": "sass variable",
    "description": "Color of text inside a title bar.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$titlebar-padding",
    "type": "sass variable",
    "description": "Padding inside a title bar.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$titlebar-text-font-weight",
    "type": "sass variable",
    "description": "Font weight of text inside a title bar.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$titlebar-icon-color",
    "type": "sass variable",
    "description": "Color of menu icons inside a title bar.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$titlebar-icon-color-hover",
    "type": "sass variable",
    "description": "Color of menu icons inside a title bar on hover.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$titlebar-icon-spacing",
    "type": "sass variable",
    "description": "Spacing between the menu icon and text inside a title bar.",
    "link": "off-canvas.html#sass-variables"
  },
  {
    "name": "$orbit-bullet-background",
    "type": "sass variable",
    "description": "Default color for Orbit&#39;s bullets.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-bullet-background-active",
    "type": "sass variable",
    "description": "Default active color for Orbit&#39;s bullets.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-bullet-diameter",
    "type": "sass variable",
    "description": "Default diameter for Orbit&#39;s bullets.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-bullet-margin",
    "type": "sass variable",
    "description": "Default margin between Orbit&#39;s bullets.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-bullet-margin-top",
    "type": "sass variable",
    "description": "Default distance from slide region for Orbit&#39;s bullets.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-bullet-margin-bottom",
    "type": "sass variable",
    "description": "Default bottom margin from Orbit&#39;s bullets to whatever content may lurk below it.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-caption-background",
    "type": "sass variable",
    "description": "Default background color for Orbit&#39;s caption.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-caption-padding",
    "type": "sass variable",
    "description": "Default padding for Orbit&#39;s caption.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-control-background-hover",
    "type": "sass variable",
    "description": "Default background color for Orbit&#39;s controls when hovered.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-control-padding",
    "type": "sass variable",
    "description": "Default padding for Orbit&#39;s controls.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$orbit-control-zindex",
    "type": "sass variable",
    "description": "Default z-index for Orbit&#39;s controls.",
    "link": "orbit.html#sass-variables"
  },
  {
    "name": "$pagination-font-size",
    "type": "sass variable",
    "description": "Font size of pagination items.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-margin-bottom",
    "type": "sass variable",
    "description": "Default bottom margin of the pagination object.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-item-color",
    "type": "sass variable",
    "description": "Text color of pagination items.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-item-padding",
    "type": "sass variable",
    "description": "Padding inside of pagination items.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-item-spacing",
    "type": "sass variable",
    "description": "Right margin to separate pagination items.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-radius",
    "type": "sass variable",
    "description": "Default radius for pagination items.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-item-background-hover",
    "type": "sass variable",
    "description": "Background color of pagination items on hover.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-item-background-current",
    "type": "sass variable",
    "description": "Background color of pagination item for the current page.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-item-color-current",
    "type": "sass variable",
    "description": "Text color of the pagination item for the current page.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-item-color-disabled",
    "type": "sass variable",
    "description": "Text color of a disabled pagination item.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-ellipsis-color",
    "type": "sass variable",
    "description": "Color of the ellipsis in a pagination menu.",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-mobile-items",
    "type": "sass variable",
    "description": "If false`, don&#39;t display page number links on mobile, only next/previous links\nand optionally current page number.\n",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-mobile-current-item",
    "type": "sass variable",
    "description": "If true`, display the current page number on mobile even if `$pagination-mobile-items` is set to `false`.\nThis parameter will only override the visibility setting of the current item for `$pagination-mobile-items: false;`,\nit will not affect the current page number visibility when `$pagination-mobile-items` is set to `true`.\n",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-arrows",
    "type": "sass variable",
    "description": "If true`, arrows are added to the next and previous links of pagination.\n",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-arrow-previous",
    "type": "sass variable",
    "description": "Content for the previous arrow when $pagination-arrows` is `true`\n",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$pagination-arrow-next",
    "type": "sass variable",
    "description": "Content for the next arrow when $pagination-arrows` is `true`\n",
    "link": "pagination.html#sass-variables"
  },
  {
    "name": "$meter-height",
    "type": "sass variable",
    "description": "Height of a &lt;meter&gt;` element.\n",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$meter-radius",
    "type": "sass variable",
    "description": "Border radius of a &lt;meter&gt;` element.\n",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$meter-background",
    "type": "sass variable",
    "description": "Background color of a &lt;meter&gt;` element.\n",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$meter-fill-good",
    "type": "sass variable",
    "description": "Meter fill for an optimal value in a &lt;meter&gt;` element.\n",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$meter-fill-medium",
    "type": "sass variable",
    "description": "Meter fill for an average value in a &lt;meter&gt;` element.\n",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$meter-fill-bad",
    "type": "sass variable",
    "description": "Meter fill for a suboptimal value in a &lt;meter&gt;` element.\n",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$progress-height",
    "type": "sass variable",
    "description": "Height of a progress bar.",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$progress-background",
    "type": "sass variable",
    "description": "Background color of a progress bar.",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$progress-margin-bottom",
    "type": "sass variable",
    "description": "Bottom margin of a progress bar.",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$progress-meter-background",
    "type": "sass variable",
    "description": "Default color of a progress bar&#39;s meter.",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$progress-radius",
    "type": "sass variable",
    "description": "Default radius of a progress bar.",
    "link": "progress-bar.html#sass-variables"
  },
  {
    "name": "$prototype-arrow-directions",
    "type": "sass variable",
    "description": "Map containing all the arrow` direction\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-arrow-size",
    "type": "sass variable",
    "description": "Width of the Arrow, 0.4375rem` by default.\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-arrow-color",
    "type": "sass variable",
    "description": "Color of the Arrow, $black` by default.\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-border-box-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for border box.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-border-none-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for border none.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-bordered-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for bordered utility.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-border-width",
    "type": "sass variable",
    "description": "Default value for prototype-border-width`\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-border-type",
    "type": "sass variable",
    "description": "Default value for prototype-border-type`\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-border-color",
    "type": "sass variable",
    "description": "Default value for prototype-border-color` defaulted to `medium-gray`\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-display-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for display classes",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-display",
    "type": "sass variable",
    "description": "Map containing all the display` classes\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-font-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for font styling types",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-wide-letter-spacing",
    "type": "sass variable",
    "description": "Letter spacing for .font-wide`\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-font-normal",
    "type": "sass variable",
    "description": "Default weight for .font-normal`, defaulted to `global-weight-normal`\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-font-bold",
    "type": "sass variable",
    "description": "Default weight for .font-bold`, defaulted to `global-weight-bold`\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-list-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for list styling types",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-style-type-unordered",
    "type": "sass variable",
    "description": "Map containing all the style-type-unordered` classes\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-style-type-ordered",
    "type": "sass variable",
    "description": "Map containing all the style-type-ordered` classes\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-overflow-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for overflow helper classes",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-overflow",
    "type": "sass variable",
    "description": "Map containing all the overflow` classes\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-position-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for position helpers",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-position",
    "type": "sass variable",
    "description": "Map containing all the position` classes\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-position-z-index",
    "type": "sass variable",
    "description": "z-index for fixed positioning",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-rounded-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for rounded utility.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-border-radius",
    "type": "sass variable",
    "description": "Default value for prototype-border-radius`\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-separator-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for separator.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-separator-align",
    "type": "sass variable",
    "description": "Default alignment of a separator.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-separator-height",
    "type": "sass variable",
    "description": "Height of a separator.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-separator-width",
    "type": "sass variable",
    "description": "Width of a separator.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-separator-background",
    "type": "sass variable",
    "description": "Default color of a separator.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-separator-margin-top",
    "type": "sass variable",
    "description": "Top Margin of a separator.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-shadow-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for shadow utility.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-box-shadow",
    "type": "sass variable",
    "description": "Default value for prototype-box-shadow`\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-sizing-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for spacing classes (margin and padding)",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-sizing",
    "type": "sass variable",
    "description": "Map containing all the sizing` classes\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-sizes",
    "type": "sass variable",
    "description": "Map containing all the sizes.",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-spacing-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for spacing classes (margin and padding)",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-spacers-count",
    "type": "sass variable",
    "description": "Default number of spacers count (margin and padding)",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-decoration-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for text decoration classes",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-text-decoration",
    "type": "sass variable",
    "description": "Map containing all the text-decoration` classes\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-transformation-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for text transformation classes",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-text-transformation",
    "type": "sass variable",
    "description": "Map containing all the text-transformation` classes\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-utilities-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for text utilities",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$prototype-text-overflow",
    "type": "sass variable",
    "description": "Default Value for text-overflow` variable\n",
    "link": "prototyping-utilities.html#sass-variables"
  },
  {
    "name": "$accordion-background",
    "type": "sass variable",
    "description": "Default background color of an accordion group.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-plusminus",
    "type": "sass variable",
    "description": "If true`, adds plus and minus icons to the side of each accordion title.\n",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-plus-content",
    "type": "sass variable",
    "description": "Content for the plus icon when $accordion-plusminus` is `true`\n",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-minus-content",
    "type": "sass variable",
    "description": "Content for the minus icon when $accordion-plusminus` is `true`\n",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-title-font-size",
    "type": "sass variable",
    "description": "Font size of accordion titles.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-item-color",
    "type": "sass variable",
    "description": "Default text color for items in a Menu.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-item-background-hover",
    "type": "sass variable",
    "description": "Default background color on hover for items in a Menu.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-item-padding",
    "type": "sass variable",
    "description": "Default padding of an accordion item.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-content-background",
    "type": "sass variable",
    "description": "Default background color of tab content.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-content-border",
    "type": "sass variable",
    "description": "Default border color of tab content.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-content-color",
    "type": "sass variable",
    "description": "Default text color of tab content.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$accordion-content-padding",
    "type": "sass variable",
    "description": "Default padding for tab content.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-margin",
    "type": "sass variable",
    "description": "Default margin of the tab bar.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-background",
    "type": "sass variable",
    "description": "Default background color of a tab bar.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-color",
    "type": "sass variable",
    "description": "Font color of tab item.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-background-active",
    "type": "sass variable",
    "description": "Active background color of a tab bar.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-active-color",
    "type": "sass variable",
    "description": "Active font color of tab item.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-item-font-size",
    "type": "sass variable",
    "description": "Font size of tab items.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-item-background-hover",
    "type": "sass variable",
    "description": "Default background color on hover for items in a Menu.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-item-padding",
    "type": "sass variable",
    "description": "Default padding of a tab item.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-content-background",
    "type": "sass variable",
    "description": "Default background color of tab content.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-content-border",
    "type": "sass variable",
    "description": "Default border color of tab content.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-content-color",
    "type": "sass variable",
    "description": "Default text color of tab content.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$tab-content-padding",
    "type": "sass variable",
    "description": "Default padding for tab content.",
    "link": "responsive-accordion-tabs.html#sass-variables"
  },
  {
    "name": "$responsive-embed-margin-bottom",
    "type": "sass variable",
    "description": "Margin below a responsive embed container.",
    "link": "responsive-embed.html#sass-variables"
  },
  {
    "name": "$responsive-embed-ratios",
    "type": "sass variable",
    "description": "Aspect ratios used to determine padding-bottom of responsive embed containers.",
    "link": "responsive-embed.html#sass-variables"
  },
  {
    "name": "$reveal-background",
    "type": "sass variable",
    "description": "Default background color of a modal.",
    "link": "reveal.html#sass-variables"
  },
  {
    "name": "$reveal-width",
    "type": "sass variable",
    "description": "Default width of a modal, with no class applied.",
    "link": "reveal.html#sass-variables"
  },
  {
    "name": "$reveal-max-width",
    "type": "sass variable",
    "description": "Default maximum width of a modal.",
    "link": "reveal.html#sass-variables"
  },
  {
    "name": "$reveal-padding",
    "type": "sass variable",
    "description": "Default padding inside a modal.",
    "link": "reveal.html#sass-variables"
  },
  {
    "name": "$reveal-border",
    "type": "sass variable",
    "description": "Default border around a modal.",
    "link": "reveal.html#sass-variables"
  },
  {
    "name": "$reveal-radius",
    "type": "sass variable",
    "description": "Default radius for modal.",
    "link": "reveal.html#sass-variables"
  },
  {
    "name": "$reveal-zindex",
    "type": "sass variable",
    "description": "z-index for modals. The overlay uses this value, while the modal itself uses this value plus one.",
    "link": "reveal.html#sass-variables"
  },
  {
    "name": "$reveal-overlay-background",
    "type": "sass variable",
    "description": "Background color of modal overlays.",
    "link": "reveal.html#sass-variables"
  },
  {
    "name": "$primary-color",
    "type": "sass variable",
    "description": "Patch to fix issue #12080",
    "link": "sass-functions.html#sass-variables"
  },
  {
    "name": "$prototype-arrow-directions",
    "type": "sass variable",
    "description": "Map containing all the arrow` direction\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-arrow-size",
    "type": "sass variable",
    "description": "Width of the Arrow, 0.4375rem` by default.\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-arrow-color",
    "type": "sass variable",
    "description": "Color of the Arrow, $black` by default.\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-border-box-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for border box.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-border-none-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for border none.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-bordered-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for bordered utility.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-border-width",
    "type": "sass variable",
    "description": "Default value for prototype-border-width`\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-border-type",
    "type": "sass variable",
    "description": "Default value for prototype-border-type`\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-border-color",
    "type": "sass variable",
    "description": "Default value for prototype-border-color` defaulted to `medium-gray`\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-display-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for display classes",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-display",
    "type": "sass variable",
    "description": "Map containing all the display` classes\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-font-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for font styling types",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-wide-letter-spacing",
    "type": "sass variable",
    "description": "Letter spacing for .font-wide`\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-font-normal",
    "type": "sass variable",
    "description": "Default weight for .font-normal`, defaulted to `global-weight-normal`\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-font-bold",
    "type": "sass variable",
    "description": "Default weight for .font-bold`, defaulted to `global-weight-bold`\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-list-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for list styling types",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-style-type-unordered",
    "type": "sass variable",
    "description": "Map containing all the style-type-unordered` classes\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-style-type-ordered",
    "type": "sass variable",
    "description": "Map containing all the style-type-ordered` classes\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-overflow-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for overflow helper classes",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-overflow",
    "type": "sass variable",
    "description": "Map containing all the overflow` classes\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-position-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for position helpers",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-position",
    "type": "sass variable",
    "description": "Map containing all the position` classes\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-position-z-index",
    "type": "sass variable",
    "description": "z-index for fixed positioning",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-rounded-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for rounded utility.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-border-radius",
    "type": "sass variable",
    "description": "Default value for prototype-border-radius`\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-separator-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for separator.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-separator-align",
    "type": "sass variable",
    "description": "Default alignment of a separator.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-separator-height",
    "type": "sass variable",
    "description": "Height of a separator.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-separator-width",
    "type": "sass variable",
    "description": "Width of a separator.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-separator-background",
    "type": "sass variable",
    "description": "Default color of a separator.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-separator-margin-top",
    "type": "sass variable",
    "description": "Top Margin of a separator.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-shadow-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for shadow utility.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-box-shadow",
    "type": "sass variable",
    "description": "Default value for prototype-box-shadow`\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-sizing-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for spacing classes (margin and padding)",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-sizing",
    "type": "sass variable",
    "description": "Map containing all the sizing` classes\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-sizes",
    "type": "sass variable",
    "description": "Map containing all the sizes.",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-spacing-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for spacing classes (margin and padding)",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-spacers-count",
    "type": "sass variable",
    "description": "Default number of spacers count (margin and padding)",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-decoration-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for text decoration classes",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-text-decoration",
    "type": "sass variable",
    "description": "Map containing all the text-decoration` classes\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-transformation-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for text transformation classes",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-text-transformation",
    "type": "sass variable",
    "description": "Map containing all the text-transformation` classes\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-utilities-breakpoints",
    "type": "sass variable",
    "description": "Responsive breakpoints for text utilities",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$prototype-text-overflow",
    "type": "sass variable",
    "description": "Default Value for text-overflow` variable\n",
    "link": "sass-mixins.html#sass-variables"
  },
  {
    "name": "$slider-width-vertical",
    "type": "sass variable",
    "description": "Default slider width of a vertical slider. (Doesn&#39;t apply to the native slider.)",
    "link": "slider.html#sass-variables"
  },
  {
    "name": "$slider-transition",
    "type": "sass variable",
    "description": "Transition properties to apply to the slider handle and fill. (Doesn&#39;t apply to the native slider.)",
    "link": "slider.html#sass-variables"
  },
  {
    "name": "$switch-background",
    "type": "sass variable",
    "description": "Background color of a switch.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-background-active",
    "type": "sass variable",
    "description": "Background active color of a switch.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-height",
    "type": "sass variable",
    "description": "Height of a switch, with no class applied.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-height-tiny",
    "type": "sass variable",
    "description": "Height of a switch with .tiny class.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-height-small",
    "type": "sass variable",
    "description": "Height of a switch with .small class.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-height-large",
    "type": "sass variable",
    "description": "Height of a switch with .large class.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-radius",
    "type": "sass variable",
    "description": "Border radius of the switch",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-margin",
    "type": "sass variable",
    "description": "border around a modal.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-paddle-background",
    "type": "sass variable",
    "description": "Background color for the switch container and paddle.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-paddle-offset",
    "type": "sass variable",
    "description": "Spacing between a switch paddle and the edge of the body.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-paddle-radius",
    "type": "sass variable",
    "description": "border radius of the switch paddle",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-paddle-transition",
    "type": "sass variable",
    "description": "switch transition.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-opacity-disabled",
    "type": "sass variable",
    "description": "Opacity of a disabled switch.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$switch-cursor-disabled",
    "type": "sass variable",
    "description": "Cursor for a disabled switch.",
    "link": "switch.html#sass-variables"
  },
  {
    "name": "$table-background",
    "type": "sass variable",
    "description": "Default color for table background.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-color-scale",
    "type": "sass variable",
    "description": "Default scale for darkening the striped table rows and the table border.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-border",
    "type": "sass variable",
    "description": "Default style for table border.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-padding",
    "type": "sass variable",
    "description": "Default padding for table.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-hover-scale",
    "type": "sass variable",
    "description": "Default scale for darkening the table rows on hover.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-row-hover",
    "type": "sass variable",
    "description": "Default color of standard rows on hover.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-row-stripe-hover",
    "type": "sass variable",
    "description": "Default color of striped rows on hover.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-is-striped",
    "type": "sass variable",
    "description": "If true`, tables are striped by default and an .unstriped class is created. If `false`, a .striped class is created.\n",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-striped-background",
    "type": "sass variable",
    "description": "Default background color for striped rows.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-stripe",
    "type": "sass variable",
    "description": "Default value for showing the stripe on rows of the tables, excluding the header and footer. If even, the even rows will have a background color. If odd, the odd rows will have a background color. If empty, or any other value, the table rows will have no striping.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-head-background",
    "type": "sass variable",
    "description": "Default color for header background.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-head-row-hover",
    "type": "sass variable",
    "description": "Default color of header rows on hover.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-foot-background",
    "type": "sass variable",
    "description": "Default color for footer background.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-foot-row-hover",
    "type": "sass variable",
    "description": "Default color of footer rows on hover.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-head-font-color",
    "type": "sass variable",
    "description": "Default font color for header.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-foot-font-color",
    "type": "sass variable",
    "description": "Default font color for footer.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$show-header-for-stacked",
    "type": "sass variable",
    "description": "Default value for showing the header when using stacked tables.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$table-stack-breakpoint",
    "type": "sass variable",
    "description": "Breakpoint at which stacked table switches from mobile to desktop view.",
    "link": "table.html#sass-variables"
  },
  {
    "name": "$tab-margin",
    "type": "sass variable",
    "description": "Default margin of the tab bar.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-background",
    "type": "sass variable",
    "description": "Default background color of a tab bar.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-color",
    "type": "sass variable",
    "description": "Font color of tab item.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-background-active",
    "type": "sass variable",
    "description": "Active background color of a tab bar.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-active-color",
    "type": "sass variable",
    "description": "Active font color of tab item.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-item-font-size",
    "type": "sass variable",
    "description": "Font size of tab items.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-item-background-hover",
    "type": "sass variable",
    "description": "Default background color on hover for items in a Menu.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-item-padding",
    "type": "sass variable",
    "description": "Default padding of a tab item.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-content-background",
    "type": "sass variable",
    "description": "Default background color of tab content.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-content-border",
    "type": "sass variable",
    "description": "Default border color of tab content.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-content-color",
    "type": "sass variable",
    "description": "Default text color of tab content.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$tab-content-padding",
    "type": "sass variable",
    "description": "Default padding for tab content.",
    "link": "tabs.html#sass-variables"
  },
  {
    "name": "$thumbnail-border",
    "type": "sass variable",
    "description": "Border around thumbnail images.",
    "link": "thumbnail.html#sass-variables"
  },
  {
    "name": "$thumbnail-margin-bottom",
    "type": "sass variable",
    "description": "Bottom margin for thumbnail images.",
    "link": "thumbnail.html#sass-variables"
  },
  {
    "name": "$thumbnail-shadow",
    "type": "sass variable",
    "description": "Box shadow under thumbnail images.",
    "link": "thumbnail.html#sass-variables"
  },
  {
    "name": "$thumbnail-shadow-hover",
    "type": "sass variable",
    "description": "Box shadow under thumbnail images.",
    "link": "thumbnail.html#sass-variables"
  },
  {
    "name": "$thumbnail-transition",
    "type": "sass variable",
    "description": "Transition proprties for thumbnail images.",
    "link": "thumbnail.html#sass-variables"
  },
  {
    "name": "$thumbnail-radius",
    "type": "sass variable",
    "description": "Default radius for thumbnail images.",
    "link": "thumbnail.html#sass-variables"
  },
  {
    "name": "$has-tip-cursor",
    "type": "sass variable",
    "description": "Default cursor of the defined term.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$has-tip-font-weight",
    "type": "sass variable",
    "description": "Default font weight of the defined term.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$has-tip-border-bottom",
    "type": "sass variable",
    "description": "Default border bottom of the defined term.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$tooltip-background-color",
    "type": "sass variable",
    "description": "Default color of the tooltip background.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$tooltip-color",
    "type": "sass variable",
    "description": "Default color of the tooltip font.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$tooltip-padding",
    "type": "sass variable",
    "description": "Default padding of the tooltip background.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$tooltip-max-width",
    "type": "sass variable",
    "description": "Default max width for tooltips.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$tooltip-font-size",
    "type": "sass variable",
    "description": "Default font size of the tooltip text. By default, we recommend a smaller font size than the body copy.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$tooltip-pip-width",
    "type": "sass variable",
    "description": "Default pip width for tooltips.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$tooltip-pip-height",
    "type": "sass variable",
    "description": "Default pip height for tooltips. This is helpful for calculating the distance of the tooltip from the tooltip word.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$tooltip-radius",
    "type": "sass variable",
    "description": "Default radius for tooltips.",
    "link": "tooltip.html#sass-variables"
  },
  {
    "name": "$topbar-padding",
    "type": "sass variable",
    "description": "Padding for the top bar.",
    "link": "top-bar.html#sass-variables"
  },
  {
    "name": "$topbar-background",
    "type": "sass variable",
    "description": "Background color for the top bar. This color also cascades to menus within the top bar.",
    "link": "top-bar.html#sass-variables"
  },
  {
    "name": "$topbar-submenu-background",
    "type": "sass variable",
    "description": "Background color submenus within the top bar. Usefull if $topbar-background is transparent.",
    "link": "top-bar.html#sass-variables"
  },
  {
    "name": "$topbar-title-spacing",
    "type": "sass variable",
    "description": "Spacing for the top bar title.",
    "link": "top-bar.html#sass-variables"
  },
  {
    "name": "$topbar-input-width",
    "type": "sass variable",
    "description": "Maximum width of &lt;input&gt;` elements inside the top bar.\n",
    "link": "top-bar.html#sass-variables"
  },
  {
    "name": "$topbar-unstack-breakpoint",
    "type": "sass variable",
    "description": "Breakpoint at which top bar switches from mobile to desktop view.",
    "link": "top-bar.html#sass-variables"
  },
  {
    "name": "$print-transparent-backgrounds",
    "type": "sass variable",
    "description": "If true`, all elements will have transparent backgrounds when printed, to save on ink.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$print-hrefs",
    "type": "sass variable",
    "description": "If true`, displays next to all links their &quot;href&quot; when printed.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$header-font-family",
    "type": "sass variable",
    "description": "Font family for header elements.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$header-font-weight",
    "type": "sass variable",
    "description": "Font weight of headers.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$header-font-style",
    "type": "sass variable",
    "description": "Font style (e.g. italicized) of headers.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$font-family-monospace",
    "type": "sass variable",
    "description": "Font stack used for elements that use monospaced type, such as code samples",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$header-color",
    "type": "sass variable",
    "description": "Color of headers.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$header-lineheight",
    "type": "sass variable",
    "description": "Line height of headers.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$header-margin-bottom",
    "type": "sass variable",
    "description": "Bottom margin of headers.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$header-styles",
    "type": "sass variable",
    "description": "Styles for headings at various screen sizes. Each key is a breakpoint, and each value is a map of heading styles.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$header-text-rendering",
    "type": "sass variable",
    "description": "Text rendering method of headers.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$small-font-size",
    "type": "sass variable",
    "description": "Font size of &lt;small&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$header-small-font-color",
    "type": "sass variable",
    "description": "Color of &lt;small&gt;` elements when placed inside headers.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$paragraph-lineheight",
    "type": "sass variable",
    "description": "Line height of text inside &lt;p&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$paragraph-margin-bottom",
    "type": "sass variable",
    "description": "Bottom margin of paragraphs.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$paragraph-text-rendering",
    "type": "sass variable",
    "description": "Text rendering method for paragraph text.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$enable-code-inline",
    "type": "sass variable",
    "description": "Use the .code-inline` component as default for `&lt;code&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$anchor-color",
    "type": "sass variable",
    "description": "Default color for links.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$anchor-color-hover",
    "type": "sass variable",
    "description": "Default color for links on hover.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$anchor-text-decoration",
    "type": "sass variable",
    "description": "Default text decoration for links.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$anchor-text-decoration-hover",
    "type": "sass variable",
    "description": "Default text decoration for links on hover.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$hr-width",
    "type": "sass variable",
    "description": "Maximum width of a divider.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$hr-border",
    "type": "sass variable",
    "description": "Default border for a divider.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$hr-margin",
    "type": "sass variable",
    "description": "Default margin for a divider.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$list-lineheight",
    "type": "sass variable",
    "description": "Line height for items in a list.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$list-margin-bottom",
    "type": "sass variable",
    "description": "Bottom margin for items in a list.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$list-style-type",
    "type": "sass variable",
    "description": "Bullet type to use for unordered lists (e.g., square`, `circle`, `disc`).\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$list-style-position",
    "type": "sass variable",
    "description": "Positioning for bullets on unordered list items.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$list-side-margin",
    "type": "sass variable",
    "description": "Left (or right) margin for lists.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$list-nested-side-margin",
    "type": "sass variable",
    "description": "Left (or right) margin for a list inside a list.",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$defnlist-margin-bottom",
    "type": "sass variable",
    "description": "Bottom margin for &lt;dl&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$defnlist-term-weight",
    "type": "sass variable",
    "description": "Font weight for &lt;dt&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$defnlist-term-margin-bottom",
    "type": "sass variable",
    "description": "Spacing between &lt;dt&gt;` and `&lt;dd&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$blockquote-color",
    "type": "sass variable",
    "description": "Text color of &lt;blockquote&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$blockquote-padding",
    "type": "sass variable",
    "description": "Padding inside a &lt;blockquote&gt;` element.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$blockquote-border",
    "type": "sass variable",
    "description": "Side border for &lt;blockquote&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$enable-cite-block",
    "type": "sass variable",
    "description": "Use the .cite-block` component as default for `&lt;cite&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$keystroke-font",
    "type": "sass variable",
    "description": "Font family for &lt;kbd&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$keystroke-color",
    "type": "sass variable",
    "description": "Text color for &lt;kbd&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$keystroke-background",
    "type": "sass variable",
    "description": "Background color for &lt;kbd&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$keystroke-padding",
    "type": "sass variable",
    "description": "Padding for &lt;kbd&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$keystroke-radius",
    "type": "sass variable",
    "description": "Border radius for &lt;kbd&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$abbr-underline",
    "type": "sass variable",
    "description": "Bottom border style for &lt;abbr&gt;` elements.\n",
    "link": "typography-base.html#sass-variables"
  },
  {
    "name": "$lead-font-size",
    "type": "sass variable",
    "description": "Default font size for lead paragraphs.",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$lead-lineheight",
    "type": "sass variable",
    "description": "Default line height for lead paragraphs.",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$subheader-lineheight",
    "type": "sass variable",
    "description": "Default line height for subheaders.",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$subheader-color",
    "type": "sass variable",
    "description": "Default font color for subheaders.",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$subheader-font-weight",
    "type": "sass variable",
    "description": "Default font weight for subheaders.",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$subheader-margin-top",
    "type": "sass variable",
    "description": "Default top margin for subheaders.",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$subheader-margin-bottom",
    "type": "sass variable",
    "description": "Default bottom margin for subheaders.",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$stat-font-size",
    "type": "sass variable",
    "description": "Default font size for statistic numbers.",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$cite-color",
    "type": "sass variable",
    "description": "Text color for .cite-block` component.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$cite-font-size",
    "type": "sass variable",
    "description": "Font size for .cite-block` component.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$cite-pseudo-content",
    "type": "sass variable",
    "description": "Pseudo content for .cite-block` component.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$code-color",
    "type": "sass variable",
    "description": "Text color of .code-inline` and `.code-block` components.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$code-font-family",
    "type": "sass variable",
    "description": "Font family of .code-inline` and `.code-block` components.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$code-font-weight",
    "type": "sass variable",
    "description": "Font weight of text in .code-inline` and `.code-block` components.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$code-background",
    "type": "sass variable",
    "description": "Background color of .code-inline` and `.code-block` components.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$code-border",
    "type": "sass variable",
    "description": "Border around .code-inline` and `.code-block` components.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$code-padding",
    "type": "sass variable",
    "description": "Padding around text of the .code-inline` component.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$code-block-padding",
    "type": "sass variable",
    "description": "Padding around text of the .code-block` component.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$code-block-margin-bottom",
    "type": "sass variable",
    "description": "Margin under the .code-block` component.\n",
    "link": "typography-helpers.html#sass-variables"
  },
  {
    "name": "$xy-grid",
    "type": "sass variable",
    "description": "Enables the XY grid.",
    "link": "xy-grid.html#sass-variables"
  },
  {
    "name": "$grid-container",
    "type": "sass variable",
    "description": "The maximum width of a grid container.",
    "link": "xy-grid.html#sass-variables"
  },
  {
    "name": "$grid-columns",
    "type": "sass variable",
    "description": "The number of columns used in the grid.",
    "link": "xy-grid.html#sass-variables"
  },
  {
    "name": "$grid-margin-gutters",
    "type": "sass variable",
    "description": "The amount of margin between cells at different screen sizes when using the margin grid. To use just one size, set the variable to a number instead of a map.",
    "link": "xy-grid.html#sass-variables"
  },
  {
    "name": "$grid-padding-gutters",
    "type": "sass variable",
    "description": "The amount of padding in cells at different screen sizes when using the padding grid. To use just one size, set the variable to a number instead of a map.",
    "link": "xy-grid.html#sass-variables"
  },
  {
    "name": "$grid-container-padding",
    "type": "sass variable",
    "description": "The amount of padding to use when padding the grid-container.",
    "link": "xy-grid.html#sass-variables"
  },
  {
    "name": "$grid-container-max",
    "type": "sass variable",
    "description": "The maximum width to apply to a grid container",
    "link": "xy-grid.html#sass-variables"
  },
  {
    "name": "$xy-block-grid-max",
    "type": "sass variable",
    "description": "The maximum number of cells in an XY block grid.",
    "link": "xy-grid.html#sass-variables"
  },
  {
    "name": "form-input-error()",
    "type": "sass mixin",
    "description": "Styles the background and border of an input field to have an error state.\n",
    "link": "abide.html#form-input-error"
  },
  {
    "name": "form-error()",
    "type": "sass mixin",
    "description": "Adds error styles to a form element, using the values in the settings file.",
    "link": "abide.html#form-error"
  },
  {
    "name": "accordion-container()",
    "type": "sass mixin",
    "description": "Adds styles for an accordion container. Apply this to the same element that gets data-accordion`.\n",
    "link": "accordion.html#accordion-container"
  },
  {
    "name": "accordion-item()",
    "type": "sass mixin",
    "description": "Adds styles for the accordion item. Apply this to the list item within an accordion ul.",
    "link": "accordion.html#accordion-item"
  },
  {
    "name": "accordion-title()",
    "type": "sass mixin",
    "description": "Adds styles for the title of an accordion item. Apply this to the link within an accordion item.",
    "link": "accordion.html#accordion-title"
  },
  {
    "name": "accordion-content()",
    "type": "sass mixin",
    "description": "Adds styles for accordion content. Apply this to the content pane below an accordion item&#39;s title.",
    "link": "accordion.html#accordion-content"
  },
  {
    "name": "badge()",
    "type": "sass mixin",
    "description": "Generates the base styles for a badge.",
    "link": "badge.html#badge"
  },
  {
    "name": "breadcrumbs-container()",
    "type": "sass mixin",
    "description": "Adds styles for a breadcrumbs container, along with the styles for the &lt;li&gt;` and `&lt;a&gt;` elements inside of it.\n",
    "link": "breadcrumbs.html#breadcrumbs-container"
  },
  {
    "name": "button-group()",
    "type": "sass mixin",
    "description": "Add styles for a button group container.",
    "link": "button-group.html#button-group"
  },
  {
    "name": "button-group-no-gaps()",
    "type": "sass mixin",
    "description": "Make buttons bonded without gap between them. Borders between buttons are merged",
    "link": "button-group.html#button-group-no-gaps"
  },
  {
    "name": "button-group-expand()",
    "type": "sass mixin",
    "description": "Creates a full-width button group, making each button equal width.",
    "link": "button-group.html#button-group-expand"
  },
  {
    "name": "button-group-stack()",
    "type": "sass mixin",
    "description": "Stacks the buttons in a button group.",
    "link": "button-group.html#button-group-stack"
  },
  {
    "name": "button-group-unstack()",
    "type": "sass mixin",
    "description": "Un-stacks the buttons in a button group.",
    "link": "button-group.html#button-group-unstack"
  },
  {
    "name": "button-expand()",
    "type": "sass mixin",
    "description": "Expands a button to make it full-width.",
    "link": "button.html#button-expand"
  },
  {
    "name": "button-fill()",
    "type": "sass mixin",
    "description": "Sets the base styles of a hollow or clear button filling according to $fill`.\nSee mixin `button-fill-style` for the filling styles.\n",
    "link": "button.html#button-fill"
  },
  {
    "name": "button-fill-style()",
    "type": "sass mixin",
    "description": "Sets the visual styles of a solid/hollow/clear button filling according to $fill`.\nSee mixins `button-style`, `button-hollow-style` and `button-clear-style` for effects of visual styling parameters.\n",
    "link": "button.html#button-fill-style"
  },
  {
    "name": "button-style()",
    "type": "sass mixin",
    "description": "Sets the visual style of a button.",
    "link": "button.html#button-style"
  },
  {
    "name": "button-hollow()",
    "type": "sass mixin",
    "description": "Sets the base styles of a hollow button.See mixin `button-hollow-style` for the filling styles.\n",
    "link": "button.html#button-hollow"
  },
  {
    "name": "button-hollow-style()",
    "type": "sass mixin",
    "description": "Sets the visual style of a hollow button.",
    "link": "button.html#button-hollow-style"
  },
  {
    "name": "button-clear()",
    "type": "sass mixin",
    "description": "Sets the base styles of a clear button.See mixin `button-clear-style` for the filling styles.\n",
    "link": "button.html#button-clear"
  },
  {
    "name": "button-clear-style()",
    "type": "sass mixin",
    "description": "Sets the visual style of a clear button.",
    "link": "button.html#button-clear-style"
  },
  {
    "name": "button-disabled()",
    "type": "sass mixin",
    "description": "Adds disabled styles to a button by fading the element and reseting the cursor.",
    "link": "button.html#button-disabled"
  },
  {
    "name": "button-dropdown()",
    "type": "sass mixin",
    "description": "Adds a dropdown arrow to a button.",
    "link": "button.html#button-dropdown"
  },
  {
    "name": "button()",
    "type": "sass mixin",
    "description": "Adds all styles for a button. For more granular control over styles, use the individual button mixins.",
    "link": "button.html#button"
  },
  {
    "name": "callout-base()",
    "type": "sass mixin",
    "description": "Adds basic styles for a callout, including padding and margin.",
    "link": "callout.html#callout-base"
  },
  {
    "name": "callout-style()",
    "type": "sass mixin",
    "description": "Generate quick styles for a callout using a single color as a baseline.",
    "link": "callout.html#callout-style"
  },
  {
    "name": "callout()",
    "type": "sass mixin",
    "description": "Adds styles for a callout.",
    "link": "callout.html#callout"
  },
  {
    "name": "card-container()",
    "type": "sass mixin",
    "description": "Adds styles for a card container.",
    "link": "card.html#card-container"
  },
  {
    "name": "card-divider()",
    "type": "sass mixin",
    "description": "Adds styles for a card divider.",
    "link": "card.html#card-divider"
  },
  {
    "name": "card-section()",
    "type": "sass mixin",
    "description": "Adds styles for a card section.",
    "link": "card.html#card-section"
  },
  {
    "name": "close-button-size()",
    "type": "sass mixin",
    "description": "Sets the size and position of a close button.",
    "link": "close-button.html#close-button-size"
  },
  {
    "name": "close-button()",
    "type": "sass mixin",
    "description": "Adds styles for a close button, using the styles in the settings variables.",
    "link": "close-button.html#close-button"
  },
  {
    "name": "dropdown-container()",
    "type": "sass mixin",
    "description": "Applies styles for a basic dropdown.",
    "link": "dropdown.html#dropdown-container"
  },
  {
    "name": "flex-grid-row()",
    "type": "sass mixin",
    "description": "Creates a container for a flex grid row.\n",
    "link": "flex-grid.html#flex-grid-row"
  },
  {
    "name": "flex-grid-column()",
    "type": "sass mixin",
    "description": "Creates a column for a flex grid. By default, the column will stretch to the full width of its container, but this can be overridden with sizing classes, or by using the unstack` class on the parent flex row.\n\n",
    "link": "flex-grid.html#flex-grid-column"
  },
  {
    "name": "flex-grid-layout()",
    "type": "sass mixin",
    "description": "Creates a block grid for a flex grid row.\n",
    "link": "flex-grid.html#flex-grid-layout"
  },
  {
    "name": "flex-grid-size()",
    "type": "sass mixin",
    "description": "Changes the width flex grid column.",
    "link": "flex-grid.html#flex-grid-size"
  },
  {
    "name": "flex()",
    "type": "sass mixin",
    "description": "Enables flexbox by adding display: flex` to the element.\n",
    "link": "flexbox-mode.html#flex"
  },
  {
    "name": "flex-align()",
    "type": "sass mixin",
    "description": "Horizontally or vertically aligns the items within a flex container.\n",
    "link": "flexbox-mode.html#flex-align"
  },
  {
    "name": "flex-align-self()",
    "type": "sass mixin",
    "description": "Vertically align a single column within a flex row. Apply this mixin to a flex column.\n",
    "link": "flexbox-mode.html#flex-align-self"
  },
  {
    "name": "flex-order()",
    "type": "sass mixin",
    "description": "Changes the source order of a flex child. Children with lower numbers appear first in the layout.",
    "link": "flexbox-mode.html#flex-order"
  },
  {
    "name": "flex-direction()",
    "type": "sass mixin",
    "description": "Change flex-direction",
    "link": "flexbox-mode.html#flex-direction"
  },
  {
    "name": "flex()",
    "type": "sass mixin",
    "description": "Enables flexbox by adding display: flex` to the element.\n",
    "link": "flexbox-utilities.html#flex"
  },
  {
    "name": "flex-align()",
    "type": "sass mixin",
    "description": "Horizontally or vertically aligns the items within a flex container.\n",
    "link": "flexbox-utilities.html#flex-align"
  },
  {
    "name": "flex-align-self()",
    "type": "sass mixin",
    "description": "Vertically align a single column within a flex row. Apply this mixin to a flex column.\n",
    "link": "flexbox-utilities.html#flex-align-self"
  },
  {
    "name": "flex-order()",
    "type": "sass mixin",
    "description": "Changes the source order of a flex child. Children with lower numbers appear first in the layout.",
    "link": "flexbox-utilities.html#flex-order"
  },
  {
    "name": "flex-direction()",
    "type": "sass mixin",
    "description": "Change flex-direction",
    "link": "flexbox-utilities.html#flex-direction"
  },
  {
    "name": "xy-grid-frame()",
    "type": "sass mixin",
    "description": "Modifies a grid to give it &quot;frame&quot; behavior (no overflow, no wrap, stretch behavior)\n",
    "link": "flexbox-utilities.html#xy-grid-frame"
  },
  {
    "name": "xy-cell-block()",
    "type": "sass mixin",
    "description": "Modifies a cell to give it &quot;block&quot; behavior (overflow auto, inertial scrolling)\n",
    "link": "flexbox-utilities.html#xy-cell-block"
  },
  {
    "name": "xy-cell-block-container()",
    "type": "sass mixin",
    "description": "Container for inside a grid frame containing multiple blocks. Typically usedas a modifier for a `.cell` to allow the cell to pass along flex sizing\nconstraints / from parents to children.\n",
    "link": "flexbox-utilities.html#xy-cell-block-container"
  },
  {
    "name": "xy-cell-base()",
    "type": "sass mixin",
    "description": "Sets base flex properties for cells.\n",
    "link": "flexbox-utilities.html#xy-cell-base"
  },
  {
    "name": "xy-cell-reset()",
    "type": "sass mixin",
    "description": "Resets a cells width (or height if vertical is true) as well as strips its gutters.\n",
    "link": "flexbox-utilities.html#xy-cell-reset"
  },
  {
    "name": "xy-cell-size()",
    "type": "sass mixin",
    "description": "Sets sizing properties for cells.\nGutters-related arguments are required for cells with margin gutters (by default) as the gutter is included in the width.\n\n",
    "link": "flexbox-utilities.html#xy-cell-size"
  },
  {
    "name": "xy-cell-gutters()",
    "type": "sass mixin",
    "description": "Sets gutters properties for cells.\n",
    "link": "flexbox-utilities.html#xy-cell-gutters"
  },
  {
    "name": "xy-cell()",
    "type": "sass mixin",
    "description": "Creates a cell for your grid.\n",
    "link": "flexbox-utilities.html#xy-cell"
  },
  {
    "name": "xy-cell-static()",
    "type": "sass mixin",
    "description": "Creates a single breakpoint sized grid. Used to generate our grid classes.\n`xy-cell-static()` is deprecated and will be removed.\nUse `xy-cell()` instead with `$output: (size gutters)` to not generate the cell base.\nSee migration notes at https://git.io/foundation-6-6-0\n\n",
    "link": "flexbox-utilities.html#xy-cell-static"
  },
  {
    "name": "xy-grid-collapse()",
    "type": "sass mixin",
    "description": "Collapses the grid a cells within it.\n",
    "link": "flexbox-utilities.html#xy-grid-collapse"
  },
  {
    "name": "xy-grid-container()",
    "type": "sass mixin",
    "description": "Creates a max width container, designed to house your grid content.\n",
    "link": "flexbox-utilities.html#xy-grid-container"
  },
  {
    "name": "xy-grid()",
    "type": "sass mixin",
    "description": "Creates a container for your flex cells.\n",
    "link": "flexbox-utilities.html#xy-grid"
  },
  {
    "name": "xy-gutters()",
    "type": "sass mixin",
    "description": "Create gutters for a cell/container.\n",
    "link": "flexbox-utilities.html#xy-gutters"
  },
  {
    "name": "xy-grid-layout()",
    "type": "sass mixin",
    "description": "Sizes child elements so that $n` number of items appear on each row.\n\n",
    "link": "flexbox-utilities.html#xy-grid-layout"
  },
  {
    "name": "xy-cell-offset()",
    "type": "sass mixin",
    "description": "Offsets a column to the right/bottom by $n` columns.\n\n",
    "link": "flexbox-utilities.html#xy-cell-offset"
  },
  {
    "name": "foundation-grid()",
    "type": "sass mixin",
    "description": "Outputs CSS classes for the grid.",
    "link": "grid.html#foundation-grid"
  },
  {
    "name": "grid-column()",
    "type": "sass mixin",
    "description": "Creates a grid column.\n",
    "link": "grid.html#grid-column"
  },
  {
    "name": "grid-column-row()",
    "type": "sass mixin",
    "description": "Creates a grid column row. This is the equivalent of adding .row` and `.column` to the same element.\n\n",
    "link": "grid.html#grid-column-row"
  },
  {
    "name": "grid-col()",
    "type": "sass mixin",
    "description": "Shorthand for grid-column()`.\n",
    "link": "grid.html#grid-col"
  },
  {
    "name": "grid-col-row()",
    "type": "sass mixin",
    "description": "Shorthand for grid-column-row()`.\n",
    "link": "grid.html#grid-col-row"
  },
  {
    "name": "grid-column-gutter()",
    "type": "sass mixin",
    "description": "Set the gutters on a column",
    "link": "grid.html#grid-column-gutter"
  },
  {
    "name": "grid-column-collapse()",
    "type": "sass mixin",
    "description": "Collapse the gutters on a column by removing the padding. **Note:** only use this mixin within a breakpoint. To collapse a column&#39;s gutters on all screen sizes, use the $gutter` parameter of the `grid-column()` mixin instead.\n",
    "link": "grid.html#grid-column-collapse"
  },
  {
    "name": "grid-col-gutter()",
    "type": "sass mixin",
    "description": "Shorthand for grid-column-gutter()`.\n",
    "link": "grid.html#grid-col-gutter"
  },
  {
    "name": "grid-col-collapse()",
    "type": "sass mixin",
    "description": "Shorthand for grid-column-collapse()`.\n",
    "link": "grid.html#grid-col-collapse"
  },
  {
    "name": "grid-column-margin()",
    "type": "sass mixin",
    "description": "Sets bottom margin on grid columns to match gutters",
    "link": "grid.html#grid-column-margin"
  },
  {
    "name": "grid-layout()",
    "type": "sass mixin",
    "description": "Sizes child elements so that $n` number of items appear on each row.\n\n",
    "link": "grid.html#grid-layout"
  },
  {
    "name": "grid-layout-center-last()",
    "type": "sass mixin",
    "description": "Adds extra CSS to block grid children so the last items in the row center automatically. Apply this to the columns, not the row.\n",
    "link": "grid.html#grid-layout-center-last"
  },
  {
    "name": "grid-column-position()",
    "type": "sass mixin",
    "description": "Reposition a column.\n",
    "link": "grid.html#grid-column-position"
  },
  {
    "name": "grid-column-unposition()",
    "type": "sass mixin",
    "description": "Reset a position definition.",
    "link": "grid.html#grid-column-unposition"
  },
  {
    "name": "grid-column-offset()",
    "type": "sass mixin",
    "description": "Offsets a column to the right by $n` columns.\n",
    "link": "grid.html#grid-column-offset"
  },
  {
    "name": "grid-column-end()",
    "type": "sass mixin",
    "description": "Disable the default behavior of the last column in a row aligning to the opposite edge.",
    "link": "grid.html#grid-column-end"
  },
  {
    "name": "grid-col-pos()",
    "type": "sass mixin",
    "description": "Shorthand for grid-column-position()`.\n",
    "link": "grid.html#grid-col-pos"
  },
  {
    "name": "grid-col-unpos()",
    "type": "sass mixin",
    "description": "Shorthand for grid-column-unposition()`.\n",
    "link": "grid.html#grid-col-unpos"
  },
  {
    "name": "grid-col-off()",
    "type": "sass mixin",
    "description": "Shorthand for grid-column-offset()`.\n",
    "link": "grid.html#grid-col-off"
  },
  {
    "name": "grid-col-end()",
    "type": "sass mixin",
    "description": "Shorthand for grid-column-end()`.\n",
    "link": "grid.html#grid-col-end"
  },
  {
    "name": "grid-context()",
    "type": "sass mixin",
    "description": "Change the behavior of columns defined inside this mixin to use a different column count.",
    "link": "grid.html#grid-context"
  },
  {
    "name": "grid-row()",
    "type": "sass mixin",
    "description": "Creates a grid row.",
    "link": "grid.html#grid-row"
  },
  {
    "name": "grid-row-nest()",
    "type": "sass mixin",
    "description": "Inverts the margins of a row to nest it inside of a column.\n",
    "link": "grid.html#grid-row-nest"
  },
  {
    "name": "grid-row-size()",
    "type": "sass mixin",
    "description": "Set a grid row size\n",
    "link": "grid.html#grid-row-size"
  },
  {
    "name": "grid-column-size()",
    "type": "sass mixin",
    "description": "Set the width of a grid column.\n",
    "link": "grid.html#grid-column-size"
  },
  {
    "name": "grid-col-size()",
    "type": "sass mixin",
    "description": "Shorthand for grid-column-size()`.\n",
    "link": "grid.html#grid-col-size"
  },
  {
    "name": "label()",
    "type": "sass mixin",
    "description": "Generates base styles for a label.",
    "link": "label.html#label"
  },
  {
    "name": "media-object-container()",
    "type": "sass mixin",
    "description": "Adds styles for a media object container.",
    "link": "media-object.html#media-object-container"
  },
  {
    "name": "media-object-section()",
    "type": "sass mixin",
    "description": "Adds styles for sections within a media object.",
    "link": "media-object.html#media-object-section"
  },
  {
    "name": "media-object-stack()",
    "type": "sass mixin",
    "description": "Adds styles to stack sections of a media object. Apply this to the section elements, not the container.",
    "link": "media-object.html#media-object-stack"
  },
  {
    "name": "breakpoint()",
    "type": "sass mixin",
    "description": "Wraps a media query around the content you put inside the mixin. This mixin accepts a number of values: - If a string is passed, the mixin will look for it in the `$breakpoints` and `$breakpoints-hidpi` maps, and use a media query there.\n - If a pixel value is passed, it will be converted to an em value using `$global-font-size` as the base.\n - If a rem value is passed, the unit will be changed to em.\n - If an em value is passed, the value will be used as-is.\n\nIf multiple values are passed, the mixin will generate a media query for each of them as described above.\nSince the content is duplicated for each breakpoint, this mixin should only be used with properties that\nchange across breakpoints.\n\n",
    "link": "media-queries.html#breakpoint"
  },
  {
    "name": "menu-base()",
    "type": "sass mixin",
    "description": "Creates the base styles for a Menu.",
    "link": "menu.html#menu-base"
  },
  {
    "name": "menu-expand()",
    "type": "sass mixin",
    "description": "Expands the items of a Menu, so each item is the same width.",
    "link": "menu.html#menu-expand"
  },
  {
    "name": "menu-align()",
    "type": "sass mixin",
    "description": "Align menu items.",
    "link": "menu.html#menu-align"
  },
  {
    "name": "menu-direction()",
    "type": "sass mixin",
    "description": "Sets the direction of a Menu.",
    "link": "menu.html#menu-direction"
  },
  {
    "name": "menu-simple()",
    "type": "sass mixin",
    "description": "Creates a simple Menu, which has no padding or hover state.",
    "link": "menu.html#menu-simple"
  },
  {
    "name": "menu-nested()",
    "type": "sass mixin",
    "description": "Adds styles for a nested Menu, by adding margin-left` to the menu.\n",
    "link": "menu.html#menu-nested"
  },
  {
    "name": "menu-icons()",
    "type": "sass mixin",
    "description": "Adds basic styles for icons in menus.",
    "link": "menu.html#menu-icons"
  },
  {
    "name": "menu-icon-alignment()",
    "type": "sass mixin",
    "description": "Align top/bottom icons within a menu.",
    "link": "menu.html#menu-icon-alignment"
  },
  {
    "name": "menu-icon-position()",
    "type": "sass mixin",
    "description": "Adds position classes for icons within a menu.",
    "link": "menu.html#menu-icon-position"
  },
  {
    "name": "off-canvas-basics()",
    "type": "sass mixin",
    "description": "Adds baseline styles for off-canvas. This CSS is required to make the other pieces work.",
    "link": "off-canvas.html#off-canvas-basics"
  },
  {
    "name": "off-canvas-base()",
    "type": "sass mixin",
    "description": "Adds basic styles for an off-canvas panel.",
    "link": "off-canvas.html#off-canvas-base"
  },
  {
    "name": "off-canvas-position()",
    "type": "sass mixin",
    "description": "Adds styles to position an off-canvas panel to the left/right/top/bottom.",
    "link": "off-canvas.html#off-canvas-position"
  },
  {
    "name": "off-canvas-content()",
    "type": "sass mixin",
    "description": "Sets the styles for the content container.",
    "link": "off-canvas.html#off-canvas-content"
  },
  {
    "name": "off-canvas-reveal()",
    "type": "sass mixin",
    "description": "Adds styles that reveal an off-canvas panel.",
    "link": "off-canvas.html#off-canvas-reveal"
  },
  {
    "name": "in-canvas()",
    "type": "sass mixin",
    "description": "Overrides the off-canvas styles",
    "link": "off-canvas.html#in-canvas"
  },
  {
    "name": "orbit-wrapper()",
    "type": "sass mixin",
    "description": "Adds styles for the outer Orbit wrapper. These styles are used on the .orbit` class.\n",
    "link": "orbit.html#orbit-wrapper"
  },
  {
    "name": "orbit-container()",
    "type": "sass mixin",
    "description": "Adds styles for the inner Orbit slide container. These styles are used on the .orbit-container` class.\n",
    "link": "orbit.html#orbit-container"
  },
  {
    "name": "orbit-slide()",
    "type": "sass mixin",
    "description": "Adds styles for the individual slides of an Orbit slider. These styles are used on the .orbit-slide` class.\n",
    "link": "orbit.html#orbit-slide"
  },
  {
    "name": "orbit-image()",
    "type": "sass mixin",
    "description": "Adds styles for a slide containing an image. These styles are used on the .orbit-image` class.\n",
    "link": "orbit.html#orbit-image"
  },
  {
    "name": "orbit-caption()",
    "type": "sass mixin",
    "description": "Adds styles for an orbit slide caption. These styles are used on the .orbit-caption` class.\n",
    "link": "orbit.html#orbit-caption"
  },
  {
    "name": "orbit-control()",
    "type": "sass mixin",
    "description": "Adds base styles for the next/previous buttons in an Orbit slider. These styles are shared between the .orbit-next` and `.orbit-previous` classes in the default CSS.\n",
    "link": "orbit.html#orbit-control"
  },
  {
    "name": "orbit-previous()",
    "type": "sass mixin",
    "description": "Adds styles for the Orbit previous button. These styles are used on the .orbit-previous` class.\n",
    "link": "orbit.html#orbit-previous"
  },
  {
    "name": "orbit-next()",
    "type": "sass mixin",
    "description": "Adds styles for the Orbit next button. These styles are used on the .orbit-next` class.\n",
    "link": "orbit.html#orbit-next"
  },
  {
    "name": "orbit-bullets()",
    "type": "sass mixin",
    "description": "Adds styles for a container of Orbit bullets.  Adds styles for the Orbit previous button. These styles are used on the .orbit-bullets` class.\n",
    "link": "orbit.html#orbit-bullets"
  },
  {
    "name": "pagination-container()",
    "type": "sass mixin",
    "description": "Adds styles for a pagination container. Apply this to a &lt;ul&gt;`.\n",
    "link": "pagination.html#pagination-container"
  },
  {
    "name": "pagination-item-current()",
    "type": "sass mixin",
    "description": "Adds styles for the current pagination item. Apply this to an &lt;a&gt;`.\n",
    "link": "pagination.html#pagination-item-current"
  },
  {
    "name": "pagination-item-disabled()",
    "type": "sass mixin",
    "description": "Adds styles for a disabled pagination item. Apply this to an &lt;a&gt;`.\n",
    "link": "pagination.html#pagination-item-disabled"
  },
  {
    "name": "pagination-ellipsis()",
    "type": "sass mixin",
    "description": "Adds styles for an ellipsis for use in a pagination list.",
    "link": "pagination.html#pagination-ellipsis"
  },
  {
    "name": "progress-container()",
    "type": "sass mixin",
    "description": "Adds styles for a progress bar container.",
    "link": "progress-bar.html#progress-container"
  },
  {
    "name": "progress-meter()",
    "type": "sass mixin",
    "description": "Adds styles for the inner meter of a progress bar.",
    "link": "progress-bar.html#progress-meter"
  },
  {
    "name": "progress-meter-text()",
    "type": "sass mixin",
    "description": "Adds styles for text in the progress meter.",
    "link": "progress-bar.html#progress-meter-text"
  },
  {
    "name": "border-box()",
    "type": "sass mixin",
    "description": "Border box utility",
    "link": "prototyping-utilities.html#border-box"
  },
  {
    "name": "border-none()",
    "type": "sass mixin",
    "description": "Border none utility",
    "link": "prototyping-utilities.html#border-none"
  },
  {
    "name": "bordered()",
    "type": "sass mixin",
    "description": "Bordered Utility: Adds a light border to an element by default.",
    "link": "prototyping-utilities.html#bordered"
  },
  {
    "name": "box()",
    "type": "sass mixin",
    "description": "Box Mixin: Easily create a square, rectangle or a circle",
    "link": "prototyping-utilities.html#box"
  },
  {
    "name": "display()",
    "type": "sass mixin",
    "description": "Display classes, by default coming through a map $prototype-display`\n",
    "link": "prototyping-utilities.html#display"
  },
  {
    "name": "font-wide()",
    "type": "sass mixin",
    "description": "Font wide letter spacing!",
    "link": "prototyping-utilities.html#font-wide"
  },
  {
    "name": "font-normal()",
    "type": "sass mixin",
    "description": "Font Weight Normal, default value coming through global-weight-normal`\n",
    "link": "prototyping-utilities.html#font-normal"
  },
  {
    "name": "font-bold()",
    "type": "sass mixin",
    "description": "Font Weight Bold, default value coming through global-weight-bold`\n",
    "link": "prototyping-utilities.html#font-bold"
  },
  {
    "name": "font-italic()",
    "type": "sass mixin",
    "description": "Font Style Italic",
    "link": "prototyping-utilities.html#font-italic"
  },
  {
    "name": "style-type-unordered()",
    "type": "sass mixin",
    "description": "Style type for unordered Lists, by default coming through a map $prototype-style-type-unordered`\n",
    "link": "prototyping-utilities.html#style-type-unordered"
  },
  {
    "name": "style-type-ordered()",
    "type": "sass mixin",
    "description": "Style type for ordered Lists, by default coming through a map $prototype-style-type-ordered`\n",
    "link": "prototyping-utilities.html#style-type-ordered"
  },
  {
    "name": "overflow()",
    "type": "sass mixin",
    "description": "Overflow classes, by default coming through a map $prototype-overflow`\n",
    "link": "prototyping-utilities.html#overflow"
  },
  {
    "name": "overflow-x()",
    "type": "sass mixin",
    "description": "Overflow classes on horizontal axis, by default coming through a map $prototype-overflow`\n",
    "link": "prototyping-utilities.html#overflow-x"
  },
  {
    "name": "overflow-y()",
    "type": "sass mixin",
    "description": "Overflow classes on vertical axis, by default coming through a map $prototype-overflow`\n",
    "link": "prototyping-utilities.html#overflow-y"
  },
  {
    "name": "position()",
    "type": "sass mixin",
    "description": "Position classes, by default coming through a map $prototype-position`, whereas all the offset values are multiplied by `$global-position` which by default is equal to `1rem`.\n",
    "link": "prototyping-utilities.html#position"
  },
  {
    "name": "position-fixed-top()",
    "type": "sass mixin",
    "description": "Position Fixed on top corners",
    "link": "prototyping-utilities.html#position-fixed-top"
  },
  {
    "name": "position-fixed-bottom()",
    "type": "sass mixin",
    "description": "Position Fixed on bottom corners",
    "link": "prototyping-utilities.html#position-fixed-bottom"
  },
  {
    "name": "rotate()",
    "type": "sass mixin",
    "description": "Rotate Mixin: Rotate an element to a certain deg",
    "link": "prototyping-utilities.html#rotate"
  },
  {
    "name": "rotateX()",
    "type": "sass mixin",
    "description": "RotateX Mixin: Rotate an element to a certain deg on X-Axis",
    "link": "prototyping-utilities.html#rotatex"
  },
  {
    "name": "rotateY()",
    "type": "sass mixin",
    "description": "RotateY Mixin: Rotate an element to a certain deg on Y-Axis",
    "link": "prototyping-utilities.html#rotatey"
  },
  {
    "name": "rotateZ()",
    "type": "sass mixin",
    "description": "RotateZ Mixin: Rotate an element to a certain deg on Z-Axis",
    "link": "prototyping-utilities.html#rotatez"
  },
  {
    "name": "border-radius()",
    "type": "sass mixin",
    "description": "Rounded utility (all corners): Adds radius corners (all corners) to an element by default.",
    "link": "prototyping-utilities.html#border-radius"
  },
  {
    "name": "border-rounded()",
    "type": "sass mixin",
    "description": "Rounded square utility or rectangle utility (all corners): Rounds all corners to an element by default to make a pill shape.",
    "link": "prototyping-utilities.html#border-rounded"
  },
  {
    "name": "separator()",
    "type": "sass mixin",
    "description": "Title separator Utility, mostly used to style the main heading of a section",
    "link": "prototyping-utilities.html#separator"
  },
  {
    "name": "shadow()",
    "type": "sass mixin",
    "description": "Shadow Utility: Adds a light box shadow to an element by default.",
    "link": "prototyping-utilities.html#shadow"
  },
  {
    "name": "max-width-100()",
    "type": "sass mixin",
    "description": "Max Width 100 utility.",
    "link": "prototyping-utilities.html#max-width-100"
  },
  {
    "name": "max-height-100()",
    "type": "sass mixin",
    "description": "Max Height 100 utility.",
    "link": "prototyping-utilities.html#max-height-100"
  },
  {
    "name": "margin()",
    "type": "sass mixin",
    "description": "Margin helper mixin, all the values are multiplied by $global-margin` which by default is equal to `1rem`\n",
    "link": "prototyping-utilities.html#margin"
  },
  {
    "name": "padding()",
    "type": "sass mixin",
    "description": "Padding helper mixin, all the values are multiplied by $global-padding` which by default is equal to `1rem`\n",
    "link": "prototyping-utilities.html#padding"
  },
  {
    "name": "margin-direction()",
    "type": "sass mixin",
    "description": "Margin classes for specific direction properties",
    "link": "prototyping-utilities.html#margin-direction"
  },
  {
    "name": "padding-direction()",
    "type": "sass mixin",
    "description": "Padding classes for specific direction properties",
    "link": "prototyping-utilities.html#padding-direction"
  },
  {
    "name": "text-decoration()",
    "type": "sass mixin",
    "description": "Text Decoration, by default coming through a map $prototype-text-decoration`\n",
    "link": "prototyping-utilities.html#text-decoration"
  },
  {
    "name": "text-transform()",
    "type": "sass mixin",
    "description": "Text Transformation, by default coming through a map $prototype-text-transformation`\n",
    "link": "prototyping-utilities.html#text-transform"
  },
  {
    "name": "text-hide()",
    "type": "sass mixin",
    "description": "Image Replacement utility. text-hide`\n",
    "link": "prototyping-utilities.html#text-hide"
  },
  {
    "name": "text-truncate()",
    "type": "sass mixin",
    "description": "Truncating the text, elipsis by default.",
    "link": "prototyping-utilities.html#text-truncate"
  },
  {
    "name": "text-nowrap()",
    "type": "sass mixin",
    "description": "No wrapping of the text. text-nowrap`\n",
    "link": "prototyping-utilities.html#text-nowrap"
  },
  {
    "name": "text-wrap()",
    "type": "sass mixin",
    "description": "Wrapping of the text. text-wrap`\n",
    "link": "prototyping-utilities.html#text-wrap"
  },
  {
    "name": "first()",
    "type": "sass mixin",
    "description": "Select all children from the first to $num`.\n",
    "link": "prototyping-utilities.html#first"
  },
  {
    "name": "first-child()",
    "type": "sass mixin",
    "description": "Select the first exact child",
    "link": "prototyping-utilities.html#first-child"
  },
  {
    "name": "last()",
    "type": "sass mixin",
    "description": "Select all children from the last to $num`.\n",
    "link": "prototyping-utilities.html#last"
  },
  {
    "name": "last-child()",
    "type": "sass mixin",
    "description": "Select the last exact child",
    "link": "prototyping-utilities.html#last-child"
  },
  {
    "name": "every()",
    "type": "sass mixin",
    "description": "Select children every $num`.\n",
    "link": "prototyping-utilities.html#every"
  },
  {
    "name": "first-last()",
    "type": "sass mixin",
    "description": "Select only the first and last child.",
    "link": "prototyping-utilities.html#first-last"
  },
  {
    "name": "after-first()",
    "type": "sass mixin",
    "description": "Select all children after the first to $num`.\n",
    "link": "prototyping-utilities.html#after-first"
  },
  {
    "name": "from-last()",
    "type": "sass mixin",
    "description": "Select all children before $num` from the last.\n",
    "link": "prototyping-utilities.html#from-last"
  },
  {
    "name": "from-first-last()",
    "type": "sass mixin",
    "description": "Select the $num` child from the first and the `$num` child from the last.\n",
    "link": "prototyping-utilities.html#from-first-last"
  },
  {
    "name": "all-but()",
    "type": "sass mixin",
    "description": "Select all children but $num`.\n",
    "link": "prototyping-utilities.html#all-but"
  },
  {
    "name": "all-but-first-last()",
    "type": "sass mixin",
    "description": "Select all children between the $num` first and the `$num` last.\n",
    "link": "prototyping-utilities.html#all-but-first-last"
  },
  {
    "name": "unique()",
    "type": "sass mixin",
    "description": "Will only select the child if it&#39;s unique. That means that if there are at least 2 children, the style will not be applied.",
    "link": "prototyping-utilities.html#unique"
  },
  {
    "name": "not-unique()",
    "type": "sass mixin",
    "description": "Will only select children if they are not unique. That means that if there are at least 2 children, the style will be applied.",
    "link": "prototyping-utilities.html#not-unique"
  },
  {
    "name": "between()",
    "type": "sass mixin",
    "description": "Select all children between $first` and `$last`.\n",
    "link": "prototyping-utilities.html#between"
  },
  {
    "name": "even()",
    "type": "sass mixin",
    "description": "Select all even children.",
    "link": "prototyping-utilities.html#even"
  },
  {
    "name": "even-between()",
    "type": "sass mixin",
    "description": "Select all even children between $first` and `$last`.\n",
    "link": "prototyping-utilities.html#even-between"
  },
  {
    "name": "odd()",
    "type": "sass mixin",
    "description": "Select all odd children.",
    "link": "prototyping-utilities.html#odd"
  },
  {
    "name": "odd-between()",
    "type": "sass mixin",
    "description": "Select all odd children between $first` and `$last`.\n",
    "link": "prototyping-utilities.html#odd-between"
  },
  {
    "name": "number-between()",
    "type": "sass mixin",
    "description": "Select all $num` children between `$first` and `$last`.\n",
    "link": "prototyping-utilities.html#number-between"
  },
  {
    "name": "accordion-container()",
    "type": "sass mixin",
    "description": "Adds styles for an accordion container. Apply this to the same element that gets data-accordion`.\n",
    "link": "responsive-accordion-tabs.html#accordion-container"
  },
  {
    "name": "accordion-item()",
    "type": "sass mixin",
    "description": "Adds styles for the accordion item. Apply this to the list item within an accordion ul.",
    "link": "responsive-accordion-tabs.html#accordion-item"
  },
  {
    "name": "accordion-title()",
    "type": "sass mixin",
    "description": "Adds styles for the title of an accordion item. Apply this to the link within an accordion item.",
    "link": "responsive-accordion-tabs.html#accordion-title"
  },
  {
    "name": "accordion-content()",
    "type": "sass mixin",
    "description": "Adds styles for accordion content. Apply this to the content pane below an accordion item&#39;s title.",
    "link": "responsive-accordion-tabs.html#accordion-content"
  },
  {
    "name": "tabs-container()",
    "type": "sass mixin",
    "description": "Adds styles for a tab container. Apply this to a &lt;ul&gt;`.\n",
    "link": "responsive-accordion-tabs.html#tabs-container"
  },
  {
    "name": "tabs-container-vertical()",
    "type": "sass mixin",
    "description": "Augments a tab container to have vertical tabs. Use this in conjunction with tabs-container()`.\n",
    "link": "responsive-accordion-tabs.html#tabs-container-vertical"
  },
  {
    "name": "tabs-title()",
    "type": "sass mixin",
    "description": "Adds styles for the links within a tab container. Apply this to the &lt;li&gt;` elements inside a tab container.\n",
    "link": "responsive-accordion-tabs.html#tabs-title"
  },
  {
    "name": "tabs-content()",
    "type": "sass mixin",
    "description": "Adds styles for the wrapper that surrounds a tab group&#39;s content panes.",
    "link": "responsive-accordion-tabs.html#tabs-content"
  },
  {
    "name": "tabs-content-vertical()",
    "type": "sass mixin",
    "description": "Augments a tab content container to have a vertical style, by shifting the border around. Use this in conjunction with tabs-content()`.\n",
    "link": "responsive-accordion-tabs.html#tabs-content-vertical"
  },
  {
    "name": "tabs-panel()",
    "type": "sass mixin",
    "description": "Adds styles for an individual tab content panel within the tab content container.",
    "link": "responsive-accordion-tabs.html#tabs-panel"
  },
  {
    "name": "responsive-embed()",
    "type": "sass mixin",
    "description": "Creates a responsive embed container.",
    "link": "responsive-embed.html#responsive-embed"
  },
  {
    "name": "reveal-overlay()",
    "type": "sass mixin",
    "description": "Adds styles for a modal overlay.",
    "link": "reveal.html#reveal-overlay"
  },
  {
    "name": "reveal-modal-base()",
    "type": "sass mixin",
    "description": "Adds base styles for a modal.",
    "link": "reveal.html#reveal-modal-base"
  },
  {
    "name": "reveal-modal-width()",
    "type": "sass mixin",
    "description": "Adjusts the width of a modal.",
    "link": "reveal.html#reveal-modal-width"
  },
  {
    "name": "reveal-modal-fullscreen()",
    "type": "sass mixin",
    "description": "Creates a full-screen modal, which stretches the full width and height of the window.",
    "link": "reveal.html#reveal-modal-fullscreen"
  },
  {
    "name": "add-foundation-colors()",
    "type": "sass mixin",
    "description": "Transfers the colors in the $foundation-palette` map into variables, such as `$primary-color` and `$secondary-color`. Call this mixin below the Global section of your settings file to properly migrate your codebase.\n",
    "link": "sass-functions.html#add-foundation-colors"
  },
  {
    "name": "flex()",
    "type": "sass mixin",
    "description": "Enables flexbox by adding display: flex` to the element.\n",
    "link": "sass-functions.html#flex"
  },
  {
    "name": "flex-align()",
    "type": "sass mixin",
    "description": "Horizontally or vertically aligns the items within a flex container.\n",
    "link": "sass-functions.html#flex-align"
  },
  {
    "name": "flex-align-self()",
    "type": "sass mixin",
    "description": "Vertically align a single column within a flex row. Apply this mixin to a flex column.\n",
    "link": "sass-functions.html#flex-align-self"
  },
  {
    "name": "flex-order()",
    "type": "sass mixin",
    "description": "Changes the source order of a flex child. Children with lower numbers appear first in the layout.",
    "link": "sass-functions.html#flex-order"
  },
  {
    "name": "flex-direction()",
    "type": "sass mixin",
    "description": "Change flex-direction",
    "link": "sass-functions.html#flex-direction"
  },
  {
    "name": "inner-side-shadow()",
    "type": "sass mixin",
    "description": "Creates an inner box-shadow for only one side\n",
    "link": "sass-mixins.html#inner-side-shadow"
  },
  {
    "name": "css-triangle()",
    "type": "sass mixin",
    "description": "Creates a CSS triangle, which can be used for dropdown arrows, dropdown pips, and more. Use this mixin inside a &amp;::before` or `&amp;::after` selector, to attach the triangle to an existing element.\n\n",
    "link": "sass-mixins.html#css-triangle"
  },
  {
    "name": "hamburger()",
    "type": "sass mixin",
    "description": "Creates a menu icon with a set width, height, number of bars, and colors. The mixin uses the height of the icon and the weight of the bars to determine spacing. &lt;div class=&quot;docs-example-burger&quot;&gt;&lt;/div&gt;\n",
    "link": "sass-mixins.html#hamburger"
  },
  {
    "name": "background-triangle()",
    "type": "sass mixin",
    "description": "Adds a downward-facing triangle as a background image to an element. The image is formatted as an SVG, making it easy to change the color. Because Internet Explorer doesn&#39;t support encoded SVGs as background images, a PNG fallback is also included.There are two PNG fallbacks: a black triangle and a white triangle. The one used depends on the lightness of the input color.\n\n",
    "link": "sass-mixins.html#background-triangle"
  },
  {
    "name": "clearfix()",
    "type": "sass mixin",
    "description": "Applies the micro clearfix hack popularized by Nicolas Gallagher. Include this mixin on a container if its children are all floated, to give the container a proper height.The clearfix is augmented with specific styles to prevent borders in flexbox environments\n",
    "link": "sass-mixins.html#clearfix"
  },
  {
    "name": "auto-width()",
    "type": "sass mixin",
    "description": "Adds CSS for a &quot;quantity query&quot; selector that automatically sizes elements based on how many there are inside a container.",
    "link": "sass-mixins.html#auto-width"
  },
  {
    "name": "disable-mouse-outline()",
    "type": "sass mixin",
    "description": "Removes the focus ring around an element when a mouse input is detected.",
    "link": "sass-mixins.html#disable-mouse-outline"
  },
  {
    "name": "element-invisible()",
    "type": "sass mixin",
    "description": "Makes an element visually hidden, but still accessible to keyboards and assistive devices.",
    "link": "sass-mixins.html#element-invisible"
  },
  {
    "name": "element-invisible-off()",
    "type": "sass mixin",
    "description": "Reverses the CSS output created by the element-invisible()` mixin.\n",
    "link": "sass-mixins.html#element-invisible-off"
  },
  {
    "name": "vertical-center()",
    "type": "sass mixin",
    "description": "Vertically centers the element inside of its first non-static parent,",
    "link": "sass-mixins.html#vertical-center"
  },
  {
    "name": "horizontal-center()",
    "type": "sass mixin",
    "description": "Horizontally centers the element inside of its first non-static parent,",
    "link": "sass-mixins.html#horizontal-center"
  },
  {
    "name": "absolute-center()",
    "type": "sass mixin",
    "description": "Absolutely centers the element inside of its first non-static parent,",
    "link": "sass-mixins.html#absolute-center"
  },
  {
    "name": "-zf-each-breakpoint()",
    "type": "sass mixin",
    "description": "Iterates through breakpoints defined in $breakpoint-classes` and prints the CSS inside the mixin at each breakpoint&#39;s media query. Use this with the grid, or any other component that has responsive classes.\n\n",
    "link": "sass-mixins.html#-zf-each-breakpoint"
  },
  {
    "name": "-zf-each-breakpoint-in()",
    "type": "sass mixin",
    "description": "Iterates with @content` through the given list of breakpoints `$breakpoints`.\n\n",
    "link": "sass-mixins.html#-zf-each-breakpoint-in"
  },
  {
    "name": "-zf-breakpoint-value()",
    "type": "sass mixin",
    "description": "Generate the @content` passed to the mixin with a value `$-zf-bp-value` related to a breakpoint, depending on the `$name` parameter:\n- For a single value, `$-zf-bp-value` is this value.\n- For a breakpoint name, `$-zf-bp-value` is the corresponding breakpoint value in `$map`.\n- For &quot;auto&quot;, `$-zf-bp-value` is the corresponding breakpoint value in `$map` and is passed to `@content`, which is made responsive for each breakpoint of `$map`.\n",
    "link": "sass-mixins.html#-zf-breakpoint-value"
  },
  {
    "name": "border-box()",
    "type": "sass mixin",
    "description": "Border box utility",
    "link": "sass-mixins.html#border-box"
  },
  {
    "name": "border-none()",
    "type": "sass mixin",
    "description": "Border none utility",
    "link": "sass-mixins.html#border-none"
  },
  {
    "name": "bordered()",
    "type": "sass mixin",
    "description": "Bordered Utility: Adds a light border to an element by default.",
    "link": "sass-mixins.html#bordered"
  },
  {
    "name": "box()",
    "type": "sass mixin",
    "description": "Box Mixin: Easily create a square, rectangle or a circle",
    "link": "sass-mixins.html#box"
  },
  {
    "name": "display()",
    "type": "sass mixin",
    "description": "Display classes, by default coming through a map $prototype-display`\n",
    "link": "sass-mixins.html#display"
  },
  {
    "name": "font-wide()",
    "type": "sass mixin",
    "description": "Font wide letter spacing!",
    "link": "sass-mixins.html#font-wide"
  },
  {
    "name": "font-normal()",
    "type": "sass mixin",
    "description": "Font Weight Normal, default value coming through global-weight-normal`\n",
    "link": "sass-mixins.html#font-normal"
  },
  {
    "name": "font-bold()",
    "type": "sass mixin",
    "description": "Font Weight Bold, default value coming through global-weight-bold`\n",
    "link": "sass-mixins.html#font-bold"
  },
  {
    "name": "font-italic()",
    "type": "sass mixin",
    "description": "Font Style Italic",
    "link": "sass-mixins.html#font-italic"
  },
  {
    "name": "style-type-unordered()",
    "type": "sass mixin",
    "description": "Style type for unordered Lists, by default coming through a map $prototype-style-type-unordered`\n",
    "link": "sass-mixins.html#style-type-unordered"
  },
  {
    "name": "style-type-ordered()",
    "type": "sass mixin",
    "description": "Style type for ordered Lists, by default coming through a map $prototype-style-type-ordered`\n",
    "link": "sass-mixins.html#style-type-ordered"
  },
  {
    "name": "overflow()",
    "type": "sass mixin",
    "description": "Overflow classes, by default coming through a map $prototype-overflow`\n",
    "link": "sass-mixins.html#overflow"
  },
  {
    "name": "overflow-x()",
    "type": "sass mixin",
    "description": "Overflow classes on horizontal axis, by default coming through a map $prototype-overflow`\n",
    "link": "sass-mixins.html#overflow-x"
  },
  {
    "name": "overflow-y()",
    "type": "sass mixin",
    "description": "Overflow classes on vertical axis, by default coming through a map $prototype-overflow`\n",
    "link": "sass-mixins.html#overflow-y"
  },
  {
    "name": "position()",
    "type": "sass mixin",
    "description": "Position classes, by default coming through a map $prototype-position`, whereas all the offset values are multiplied by `$global-position` which by default is equal to `1rem`.\n",
    "link": "sass-mixins.html#position"
  },
  {
    "name": "position-fixed-top()",
    "type": "sass mixin",
    "description": "Position Fixed on top corners",
    "link": "sass-mixins.html#position-fixed-top"
  },
  {
    "name": "position-fixed-bottom()",
    "type": "sass mixin",
    "description": "Position Fixed on bottom corners",
    "link": "sass-mixins.html#position-fixed-bottom"
  },
  {
    "name": "rotate()",
    "type": "sass mixin",
    "description": "Rotate Mixin: Rotate an element to a certain deg",
    "link": "sass-mixins.html#rotate"
  },
  {
    "name": "rotateX()",
    "type": "sass mixin",
    "description": "RotateX Mixin: Rotate an element to a certain deg on X-Axis",
    "link": "sass-mixins.html#rotatex"
  },
  {
    "name": "rotateY()",
    "type": "sass mixin",
    "description": "RotateY Mixin: Rotate an element to a certain deg on Y-Axis",
    "link": "sass-mixins.html#rotatey"
  },
  {
    "name": "rotateZ()",
    "type": "sass mixin",
    "description": "RotateZ Mixin: Rotate an element to a certain deg on Z-Axis",
    "link": "sass-mixins.html#rotatez"
  },
  {
    "name": "border-radius()",
    "type": "sass mixin",
    "description": "Rounded utility (all corners): Adds radius corners (all corners) to an element by default.",
    "link": "sass-mixins.html#border-radius"
  },
  {
    "name": "border-rounded()",
    "type": "sass mixin",
    "description": "Rounded square utility or rectangle utility (all corners): Rounds all corners to an element by default to make a pill shape.",
    "link": "sass-mixins.html#border-rounded"
  },
  {
    "name": "separator()",
    "type": "sass mixin",
    "description": "Title separator Utility, mostly used to style the main heading of a section",
    "link": "sass-mixins.html#separator"
  },
  {
    "name": "shadow()",
    "type": "sass mixin",
    "description": "Shadow Utility: Adds a light box shadow to an element by default.",
    "link": "sass-mixins.html#shadow"
  },
  {
    "name": "max-width-100()",
    "type": "sass mixin",
    "description": "Max Width 100 utility.",
    "link": "sass-mixins.html#max-width-100"
  },
  {
    "name": "max-height-100()",
    "type": "sass mixin",
    "description": "Max Height 100 utility.",
    "link": "sass-mixins.html#max-height-100"
  },
  {
    "name": "margin()",
    "type": "sass mixin",
    "description": "Margin helper mixin, all the values are multiplied by $global-margin` which by default is equal to `1rem`\n",
    "link": "sass-mixins.html#margin"
  },
  {
    "name": "padding()",
    "type": "sass mixin",
    "description": "Padding helper mixin, all the values are multiplied by $global-padding` which by default is equal to `1rem`\n",
    "link": "sass-mixins.html#padding"
  },
  {
    "name": "margin-direction()",
    "type": "sass mixin",
    "description": "Margin classes for specific direction properties",
    "link": "sass-mixins.html#margin-direction"
  },
  {
    "name": "padding-direction()",
    "type": "sass mixin",
    "description": "Padding classes for specific direction properties",
    "link": "sass-mixins.html#padding-direction"
  },
  {
    "name": "text-decoration()",
    "type": "sass mixin",
    "description": "Text Decoration, by default coming through a map $prototype-text-decoration`\n",
    "link": "sass-mixins.html#text-decoration"
  },
  {
    "name": "text-transform()",
    "type": "sass mixin",
    "description": "Text Transformation, by default coming through a map $prototype-text-transformation`\n",
    "link": "sass-mixins.html#text-transform"
  },
  {
    "name": "text-hide()",
    "type": "sass mixin",
    "description": "Image Replacement utility. text-hide`\n",
    "link": "sass-mixins.html#text-hide"
  },
  {
    "name": "text-truncate()",
    "type": "sass mixin",
    "description": "Truncating the text, elipsis by default.",
    "link": "sass-mixins.html#text-truncate"
  },
  {
    "name": "text-nowrap()",
    "type": "sass mixin",
    "description": "No wrapping of the text. text-nowrap`\n",
    "link": "sass-mixins.html#text-nowrap"
  },
  {
    "name": "text-wrap()",
    "type": "sass mixin",
    "description": "Wrapping of the text. text-wrap`\n",
    "link": "sass-mixins.html#text-wrap"
  },
  {
    "name": "first()",
    "type": "sass mixin",
    "description": "Select all children from the first to $num`.\n",
    "link": "sass-mixins.html#first"
  },
  {
    "name": "first-child()",
    "type": "sass mixin",
    "description": "Select the first exact child",
    "link": "sass-mixins.html#first-child"
  },
  {
    "name": "last()",
    "type": "sass mixin",
    "description": "Select all children from the last to $num`.\n",
    "link": "sass-mixins.html#last"
  },
  {
    "name": "last-child()",
    "type": "sass mixin",
    "description": "Select the last exact child",
    "link": "sass-mixins.html#last-child"
  },
  {
    "name": "every()",
    "type": "sass mixin",
    "description": "Select children every $num`.\n",
    "link": "sass-mixins.html#every"
  },
  {
    "name": "first-last()",
    "type": "sass mixin",
    "description": "Select only the first and last child.",
    "link": "sass-mixins.html#first-last"
  },
  {
    "name": "after-first()",
    "type": "sass mixin",
    "description": "Select all children after the first to $num`.\n",
    "link": "sass-mixins.html#after-first"
  },
  {
    "name": "from-last()",
    "type": "sass mixin",
    "description": "Select all children before $num` from the last.\n",
    "link": "sass-mixins.html#from-last"
  },
  {
    "name": "from-first-last()",
    "type": "sass mixin",
    "description": "Select the $num` child from the first and the `$num` child from the last.\n",
    "link": "sass-mixins.html#from-first-last"
  },
  {
    "name": "all-but()",
    "type": "sass mixin",
    "description": "Select all children but $num`.\n",
    "link": "sass-mixins.html#all-but"
  },
  {
    "name": "all-but-first-last()",
    "type": "sass mixin",
    "description": "Select all children between the $num` first and the `$num` last.\n",
    "link": "sass-mixins.html#all-but-first-last"
  },
  {
    "name": "unique()",
    "type": "sass mixin",
    "description": "Will only select the child if it&#39;s unique. That means that if there are at least 2 children, the style will not be applied.",
    "link": "sass-mixins.html#unique"
  },
  {
    "name": "not-unique()",
    "type": "sass mixin",
    "description": "Will only select children if they are not unique. That means that if there are at least 2 children, the style will be applied.",
    "link": "sass-mixins.html#not-unique"
  },
  {
    "name": "between()",
    "type": "sass mixin",
    "description": "Select all children between $first` and `$last`.\n",
    "link": "sass-mixins.html#between"
  },
  {
    "name": "even()",
    "type": "sass mixin",
    "description": "Select all even children.",
    "link": "sass-mixins.html#even"
  },
  {
    "name": "even-between()",
    "type": "sass mixin",
    "description": "Select all even children between $first` and `$last`.\n",
    "link": "sass-mixins.html#even-between"
  },
  {
    "name": "odd()",
    "type": "sass mixin",
    "description": "Select all odd children.",
    "link": "sass-mixins.html#odd"
  },
  {
    "name": "odd-between()",
    "type": "sass mixin",
    "description": "Select all odd children between $first` and `$last`.\n",
    "link": "sass-mixins.html#odd-between"
  },
  {
    "name": "number-between()",
    "type": "sass mixin",
    "description": "Select all $num` children between `$first` and `$last`.\n",
    "link": "sass-mixins.html#number-between"
  },
  {
    "name": "slider-container()",
    "type": "sass mixin",
    "description": "Adds the general styles for sliders.",
    "link": "slider.html#slider-container"
  },
  {
    "name": "slider-fill()",
    "type": "sass mixin",
    "description": "Adds the general styles for active fill for sliders.",
    "link": "slider.html#slider-fill"
  },
  {
    "name": "slider-handle()",
    "type": "sass mixin",
    "description": "Adds the general styles for the slider handles.",
    "link": "slider.html#slider-handle"
  },
  {
    "name": "switch-container()",
    "type": "sass mixin",
    "description": "Adds styles for a switch container. Apply this to a container class.",
    "link": "switch.html#switch-container"
  },
  {
    "name": "switch-input()",
    "type": "sass mixin",
    "description": "Adds styles for a switch input. Apply this to an &lt;input&gt;` within a switch.\n",
    "link": "switch.html#switch-input"
  },
  {
    "name": "switch-paddle()",
    "type": "sass mixin",
    "description": "Adds styles for the background and paddle of a switch. Apply this to a &lt;label&gt;` within a switch.\n",
    "link": "switch.html#switch-paddle"
  },
  {
    "name": "switch-text()",
    "type": "sass mixin",
    "description": "Adds base styles for active/inactive text inside a switch. Apply this to text elements inside the switch &lt;label&gt;`.\n",
    "link": "switch.html#switch-text"
  },
  {
    "name": "switch-text-active()",
    "type": "sass mixin",
    "description": "Adds styles for the active state text within a switch.",
    "link": "switch.html#switch-text-active"
  },
  {
    "name": "switch-text-inactive()",
    "type": "sass mixin",
    "description": "Adds styles for the inactive state text within a switch.",
    "link": "switch.html#switch-text-inactive"
  },
  {
    "name": "switch-size()",
    "type": "sass mixin",
    "description": "Changes the size of a switch by modifying the size of the body and paddle. Apply this to a switch container.",
    "link": "switch.html#switch-size"
  },
  {
    "name": "table()",
    "type": "sass mixin",
    "description": "Adds the general styles for tables.",
    "link": "table.html#table"
  },
  {
    "name": "table-scroll()",
    "type": "sass mixin",
    "description": "Adds the ability to horizontally scroll the table when the content overflows horizontally.",
    "link": "table.html#table-scroll"
  },
  {
    "name": "table-hover()",
    "type": "sass mixin",
    "description": "Slightly darkens the table rows on hover.",
    "link": "table.html#table-hover"
  },
  {
    "name": "table-stack()",
    "type": "sass mixin",
    "description": "Adds styles for a stacked table. Useful for small-screen layouts.",
    "link": "table.html#table-stack"
  },
  {
    "name": "tabs-container()",
    "type": "sass mixin",
    "description": "Adds styles for a tab container. Apply this to a &lt;ul&gt;`.\n",
    "link": "tabs.html#tabs-container"
  },
  {
    "name": "tabs-container-vertical()",
    "type": "sass mixin",
    "description": "Augments a tab container to have vertical tabs. Use this in conjunction with tabs-container()`.\n",
    "link": "tabs.html#tabs-container-vertical"
  },
  {
    "name": "tabs-title()",
    "type": "sass mixin",
    "description": "Adds styles for the links within a tab container. Apply this to the &lt;li&gt;` elements inside a tab container.\n",
    "link": "tabs.html#tabs-title"
  },
  {
    "name": "tabs-content()",
    "type": "sass mixin",
    "description": "Adds styles for the wrapper that surrounds a tab group&#39;s content panes.",
    "link": "tabs.html#tabs-content"
  },
  {
    "name": "tabs-content-vertical()",
    "type": "sass mixin",
    "description": "Augments a tab content container to have a vertical style, by shifting the border around. Use this in conjunction with tabs-content()`.\n",
    "link": "tabs.html#tabs-content-vertical"
  },
  {
    "name": "tabs-panel()",
    "type": "sass mixin",
    "description": "Adds styles for an individual tab content panel within the tab content container.",
    "link": "tabs.html#tabs-panel"
  },
  {
    "name": "thumbnail()",
    "type": "sass mixin",
    "description": "Adds thumbnail styles to an element.",
    "link": "thumbnail.html#thumbnail"
  },
  {
    "name": "top-bar-container()",
    "type": "sass mixin",
    "description": "Adds styles for a top bar container.",
    "link": "top-bar.html#top-bar-container"
  },
  {
    "name": "top-bar-stacked()",
    "type": "sass mixin",
    "description": "Makes sections of a top bar stack on top of each other.",
    "link": "top-bar.html#top-bar-stacked"
  },
  {
    "name": "top-bar-unstack()",
    "type": "sass mixin",
    "description": "Undoes the CSS applied by the top-bar-stacked()` mixin.\n",
    "link": "top-bar.html#top-bar-unstack"
  },
  {
    "name": "code-style()",
    "type": "sass mixin",
    "description": "Add basic styles for a code helper.See `code-inline` and `code-block` mixins.\n",
    "link": "typography-helpers.html#code-style"
  },
  {
    "name": "code-inline()",
    "type": "sass mixin",
    "description": "Make code helper from the code-style` mixin inline.\nUsed to generate `.code-inline`\n",
    "link": "typography-helpers.html#code-inline"
  },
  {
    "name": "code-block()",
    "type": "sass mixin",
    "description": "Make code helper from the code-style` mixin a block.\nUsed to generate `.code-block`\n",
    "link": "typography-helpers.html#code-block"
  },
  {
    "name": "show-for()",
    "type": "sass mixin",
    "description": "Hide an element by default, only displaying it above a certain screen size.",
    "link": "visibility.html#show-for"
  },
  {
    "name": "show-for-only()",
    "type": "sass mixin",
    "description": "Hide an element by default, only displaying it within a certain breakpoint.",
    "link": "visibility.html#show-for-only"
  },
  {
    "name": "hide-for()",
    "type": "sass mixin",
    "description": "Show an element by default, and hide it above a certain screen size.",
    "link": "visibility.html#hide-for"
  },
  {
    "name": "hide-for-only()",
    "type": "sass mixin",
    "description": "Show an element by default, and hide it above a certain screen size.",
    "link": "visibility.html#hide-for-only"
  },
  {
    "name": "xy-grid-frame()",
    "type": "sass mixin",
    "description": "Modifies a grid to give it &quot;frame&quot; behavior (no overflow, no wrap, stretch behavior)\n",
    "link": "xy-grid.html#xy-grid-frame"
  },
  {
    "name": "xy-cell-block()",
    "type": "sass mixin",
    "description": "Modifies a cell to give it &quot;block&quot; behavior (overflow auto, inertial scrolling)\n",
    "link": "xy-grid.html#xy-cell-block"
  },
  {
    "name": "xy-cell-block-container()",
    "type": "sass mixin",
    "description": "Container for inside a grid frame containing multiple blocks. Typically usedas a modifier for a `.cell` to allow the cell to pass along flex sizing\nconstraints / from parents to children.\n",
    "link": "xy-grid.html#xy-cell-block-container"
  },
  {
    "name": "xy-cell-base()",
    "type": "sass mixin",
    "description": "Sets base flex properties for cells.\n",
    "link": "xy-grid.html#xy-cell-base"
  },
  {
    "name": "xy-cell-reset()",
    "type": "sass mixin",
    "description": "Resets a cells width (or height if vertical is true) as well as strips its gutters.\n",
    "link": "xy-grid.html#xy-cell-reset"
  },
  {
    "name": "xy-cell-size()",
    "type": "sass mixin",
    "description": "Sets sizing properties for cells.\nGutters-related arguments are required for cells with margin gutters (by default) as the gutter is included in the width.\n\n",
    "link": "xy-grid.html#xy-cell-size"
  },
  {
    "name": "xy-cell-gutters()",
    "type": "sass mixin",
    "description": "Sets gutters properties for cells.\n",
    "link": "xy-grid.html#xy-cell-gutters"
  },
  {
    "name": "xy-cell()",
    "type": "sass mixin",
    "description": "Creates a cell for your grid.\n",
    "link": "xy-grid.html#xy-cell"
  },
  {
    "name": "xy-cell-static()",
    "type": "sass mixin",
    "description": "Creates a single breakpoint sized grid. Used to generate our grid classes.\n`xy-cell-static()` is deprecated and will be removed.\nUse `xy-cell()` instead with `$output: (size gutters)` to not generate the cell base.\nSee migration notes at https://git.io/foundation-6-6-0\n\n",
    "link": "xy-grid.html#xy-cell-static"
  },
  {
    "name": "xy-grid-collapse()",
    "type": "sass mixin",
    "description": "Collapses the grid a cells within it.\n",
    "link": "xy-grid.html#xy-grid-collapse"
  },
  {
    "name": "xy-grid-container()",
    "type": "sass mixin",
    "description": "Creates a max width container, designed to house your grid content.\n",
    "link": "xy-grid.html#xy-grid-container"
  },
  {
    "name": "xy-grid()",
    "type": "sass mixin",
    "description": "Creates a container for your flex cells.\n",
    "link": "xy-grid.html#xy-grid"
  },
  {
    "name": "xy-gutters()",
    "type": "sass mixin",
    "description": "Create gutters for a cell/container.\n",
    "link": "xy-grid.html#xy-gutters"
  },
  {
    "name": "xy-grid-layout()",
    "type": "sass mixin",
    "description": "Sizes child elements so that $n` number of items appear on each row.\n\n",
    "link": "xy-grid.html#xy-grid-layout"
  },
  {
    "name": "xy-cell-offset()",
    "type": "sass mixin",
    "description": "Offsets a column to the right/bottom by $n` columns.\n\n",
    "link": "xy-grid.html#xy-cell-offset"
  },
  {
    "name": "-zf-get-size-val()",
    "type": "sass function",
    "description": "Get the size and position for a close button. If the input value is a number, the number is returned. If the input value is a config map and the map has the key $size`, the value is returned.\n\n",
    "link": "close-button.html#-zf-get-size-val"
  },
  {
    "name": "flex-grid-column()",
    "type": "sass function",
    "description": "Calculates the flex` property for a flex grid column. It accepts all of the same values as the basic `grid-column()` function, along with two extras:\n  - `expand` (the default) will make the column expand to fill space.\n  - `shrink` will make the column contract, so it only takes up the horizontal space it needs.\n\n",
    "link": "flex-grid.html#flex-grid-column"
  },
  {
    "name": "xy-cell-base()",
    "type": "sass function",
    "description": "Returns the appropriate CSS flex value for a cell base.\n",
    "link": "flexbox-utilities.html#xy-cell-base"
  },
  {
    "name": "xy-cell-gutters()",
    "type": "sass function",
    "description": "Calculate the size of a cell gutters.\n",
    "link": "flexbox-utilities.html#xy-cell-gutters"
  },
  {
    "name": "xy-cell-size()",
    "type": "sass function",
    "description": "Returns the percentage size of a cell.\n",
    "link": "flexbox-utilities.html#xy-cell-size"
  },
  {
    "name": "xy-cell-size-css()",
    "type": "sass function",
    "description": "Returns the appropriate CSS value for a cell size.\nGutters-related arguments are required for cells with margin gutters (by default) as the gutter is included in the width.\n\n",
    "link": "flexbox-utilities.html#xy-cell-size-css"
  },
  {
    "name": "xy-cell-offset()",
    "type": "sass function",
    "description": "Returns the appropriate CSS value to offset a cell.\n",
    "link": "flexbox-utilities.html#xy-cell-offset"
  },
  {
    "name": "grid-column()",
    "type": "sass function",
    "description": "Calculates the width of a column based on a number of factors.\n",
    "link": "grid.html#grid-column"
  },
  {
    "name": "grid-col()",
    "type": "sass function",
    "description": "Shorthand for grid-column()`.\n",
    "link": "grid.html#grid-col"
  },
  {
    "name": "breakpoint()",
    "type": "sass function",
    "description": "Generates a media query string matching the input value. Refer to the documentation for the breakpoint()` mixin to see what the possible inputs are.\n\n",
    "link": "media-queries.html#breakpoint"
  },
  {
    "name": "-zf-bp-serialize()",
    "type": "sass function",
    "description": "Converts the breakpoints map to a URL-encoded string, like this: key1=value1&amp;key2=value2`. The value is then dropped into the CSS for a special `&lt;meta&gt;` tag, which is read by the Foundation JavaScript. This is how we transfer values from Sass to JavaScript, so they can be defined in one place.\n",
    "link": "media-queries.html#-zf-bp-serialize"
  },
  {
    "name": "-zf-map-next()",
    "type": "sass function",
    "description": "Find the next key in a map.",
    "link": "media-queries.html#-zf-map-next"
  },
  {
    "name": "-zf-map-next-number()",
    "type": "sass function",
    "description": "Find the next number in a map.",
    "link": "media-queries.html#-zf-map-next-number"
  },
  {
    "name": "-zf-breakpoints-less-than()",
    "type": "sass function",
    "description": "Return a list of our named breakpoints less than $key. Useful for dealing withresponsive gutters for the grid.\n",
    "link": "media-queries.html#-zf-breakpoints-less-than"
  },
  {
    "name": "-zf-closest-named-breakpoint()",
    "type": "sass function",
    "description": "Return a list of our named breakpoints less than $key. Useful for dealing withresponsive gutters for the grid.\n",
    "link": "media-queries.html#-zf-closest-named-breakpoint"
  },
  {
    "name": "-zf-get-bp-val()",
    "type": "sass function",
    "description": "Get a value for a breakpoint from a responsive config map or single value.- If the config is a single value, return it regardless of `$value`.\n- If the config is a map and has the key `$value`, the exact breakpoint value is returned.\n- If the config is a map and does *not* have the breakpoint, the value matching the next lowest breakpoint in the config map is returned.\n",
    "link": "media-queries.html#-zf-get-bp-val"
  },
  {
    "name": "-zf-current-breakpoint()",
    "type": "sass function",
    "description": "Return the best breakpoint to use according to the calling context. It returns in order:1. the given `$value` argument if it is not null.\n2. the global breakpoint context `$-zf-size` if it is not null (like if called inside then `breakpoint()` mixin)\n3. the given `$default` argument.\n",
    "link": "media-queries.html#-zf-current-breakpoint"
  },
  {
    "name": "-zf-bp-join()",
    "type": "sass function",
    "description": "Return media query string from the given min and/or max limits.If a limit is equal to `null` or `0`, it is ignored.\n",
    "link": "media-queries.html#-zf-bp-join"
  },
  {
    "name": "color-luminance()",
    "type": "sass function",
    "description": "Checks the luminance of $color`.\n\n",
    "link": "sass-functions.html#color-luminance"
  },
  {
    "name": "color-contrast()",
    "type": "sass function",
    "description": "Checks the contrast ratio of two colors.\n",
    "link": "sass-functions.html#color-contrast"
  },
  {
    "name": "color-pick-contrast()",
    "type": "sass function",
    "description": "Checks the luminance of $base`, and returns the color from `$colors` (list of colors) that has the most contrast.\n\n",
    "link": "sass-functions.html#color-pick-contrast"
  },
  {
    "name": "smart-scale()",
    "type": "sass function",
    "description": "Scales a color to be darker if it&#39;s light, or lighter if it&#39;s dark. Use this function to tint a color appropriate to its lightness.\n",
    "link": "sass-functions.html#smart-scale"
  },
  {
    "name": "get-color()",
    "type": "sass function",
    "description": "Get color from foundation-palette\n",
    "link": "sass-functions.html#get-color"
  },
  {
    "name": "direction-opposite()",
    "type": "sass function",
    "description": "Returns the opposite direction of $dir\n",
    "link": "sass-functions.html#direction-opposite"
  },
  {
    "name": "gcd()",
    "type": "sass function",
    "description": "Finds the greatest common divisor of two integers.\n",
    "link": "sass-functions.html#gcd"
  },
  {
    "name": "pow()",
    "type": "sass function",
    "description": "Handles decimal exponents by trying to convert them into a fraction and then use a nth-root-algorithm for parts of the calculation\n",
    "link": "sass-functions.html#pow"
  },
  {
    "name": "ratio-to-percentage()",
    "type": "sass function",
    "description": "Calculates the height as a percentage of the width for a given ratio.",
    "link": "sass-functions.html#ratio-to-percentage"
  },
  {
    "name": "zf-parse-fraction()",
    "type": "sass function",
    "description": "Parse the given $fraction` to numerators and denumerators.\n\n",
    "link": "sass-functions.html#zf-parse-fraction"
  },
  {
    "name": "zf-is-fraction()",
    "type": "sass function",
    "description": "Returns whether the given $value` represents a fraction. Supports formats like `50%`, `1 of 2`, `1 per 2` or `1/2`.\n\n",
    "link": "sass-functions.html#zf-is-fraction"
  },
  {
    "name": "fraction-to-percentage()",
    "type": "sass function",
    "description": "Calculate a percentage from a given fraction.\n",
    "link": "sass-functions.html#fraction-to-percentage"
  },
  {
    "name": "divide()",
    "type": "sass function",
    "description": "Divide the given $divident` by the given `$divisor`.\n\n",
    "link": "sass-functions.html#divide"
  },
  {
    "name": "text-inputs()",
    "type": "sass function",
    "description": "Generates a selector with every text input type. You can also filter the list to only output a subset of those selectors.\n",
    "link": "sass-functions.html#text-inputs"
  },
  {
    "name": "font-stack()",
    "type": "sass function",
    "description": "Return a font stack list from a map. Equivalent to map-safe-get($name, $-zf-font-stack)`.\n\n",
    "link": "sass-functions.html#font-stack"
  },
  {
    "name": "strip-unit()",
    "type": "sass function",
    "description": "Removes the unit (e.g. px, em, rem) from a value, returning the number only.\n",
    "link": "sass-functions.html#strip-unit"
  },
  {
    "name": "rem-calc()",
    "type": "sass function",
    "description": "Converts one or more pixel values into matching rem values.\n",
    "link": "sass-functions.html#rem-calc"
  },
  {
    "name": "-zf-to-rem()",
    "type": "sass function",
    "description": "Converts a pixel value to matching rem value. *Any* value passed, regardless of unit, is assumed to be a pixel value. By default, the base pixel value used to calculate the rem value is taken from the $global-font-size` variable.\n",
    "link": "sass-functions.html#-zf-to-rem"
  },
  {
    "name": "unitless-calc()",
    "type": "sass function",
    "description": "Converts a pixel, percentage, rem or em value to a unitless value based on a given font size. Ideal for working out unitless line heights.\n",
    "link": "sass-functions.html#unitless-calc"
  },
  {
    "name": "has-value()",
    "type": "sass function",
    "description": "Determine if a value is not falsey, in CSS terms. Falsey values are null`, `none`, `0` with any unit, or an empty list.\n\n",
    "link": "sass-functions.html#has-value"
  },
  {
    "name": "get-side()",
    "type": "sass function",
    "description": "Determine a top/right/bottom/right value on a padding, margin, etc. property, no matter how many values were passed in. Use this function if you need to know the specific side of a value, but don&#39;t know if the value is using a shorthand format.\n",
    "link": "sass-functions.html#get-side"
  },
  {
    "name": "get-border-value()",
    "type": "sass function",
    "description": "Given border $val, find a specific element of the border, which is $elem. The possible values for $elem are width, style, and color.\n",
    "link": "sass-functions.html#get-border-value"
  },
  {
    "name": "map-deep-get()",
    "type": "sass function",
    "description": "Finds a value in a nested map.",
    "link": "sass-functions.html#map-deep-get"
  },
  {
    "name": "map-to-list()",
    "type": "sass function",
    "description": "Casts a map into a list.",
    "link": "sass-functions.html#map-to-list"
  },
  {
    "name": "zf-str-join()",
    "type": "sass function",
    "description": "Return a join of the two given strings $str1` and `$str2`.\nIf the two strings are not empty, they are separated by `$delimiter`.\n\n",
    "link": "sass-functions.html#zf-str-join"
  },
  {
    "name": "map-safe-get()",
    "type": "sass function",
    "description": "Safely return a value from a map.\n",
    "link": "sass-functions.html#map-safe-get"
  },
  {
    "name": "-zf-bool()",
    "type": "sass function",
    "description": "Convert the given $val` to a Boolean. Empty values are considered as false.\n\n",
    "link": "sass-functions.html#-zf-bool"
  },
  {
    "name": "xy-cell-base()",
    "type": "sass function",
    "description": "Returns the appropriate CSS flex value for a cell base.\n",
    "link": "xy-grid.html#xy-cell-base"
  },
  {
    "name": "xy-cell-gutters()",
    "type": "sass function",
    "description": "Calculate the size of a cell gutters.\n",
    "link": "xy-grid.html#xy-cell-gutters"
  },
  {
    "name": "xy-cell-size()",
    "type": "sass function",
    "description": "Returns the percentage size of a cell.\n",
    "link": "xy-grid.html#xy-cell-size"
  },
  {
    "name": "xy-cell-size-css()",
    "type": "sass function",
    "description": "Returns the appropriate CSS value for a cell size.\nGutters-related arguments are required for cells with margin gutters (by default) as the gutter is included in the width.\n\n",
    "link": "xy-grid.html#xy-cell-size-css"
  },
  {
    "name": "xy-cell-offset()",
    "type": "sass function",
    "description": "Returns the appropriate CSS value to offset a cell.\n",
    "link": "xy-grid.html#xy-cell-offset"
  },
  {
    "type": "js class",
    "name": "Abide()",
    "description": "Creates a new instance of Abide.",
    "link": "abide.html#js-class"
  },
  {
    "type": "js class",
    "name": "AccordionMenu()",
    "description": "Creates a new instance of an accordion menu.",
    "link": "accordion-menu.html#js-class"
  },
  {
    "type": "js class",
    "name": "Accordion()",
    "description": "Creates a new instance of an accordion.",
    "link": "accordion.html#js-class"
  },
  {
    "type": "js class",
    "name": "Drilldown()",
    "description": "Creates a new instance of a drilldown menu.",
    "link": "drilldown-menu.html#js-class"
  },
  {
    "type": "js class",
    "name": "DropdownMenu()",
    "description": "Creates a new instance of DropdownMenu.",
    "link": "dropdown-menu.html#js-class"
  },
  {
    "type": "js class",
    "name": "Dropdown()",
    "description": "Creates a new instance of a dropdown.",
    "link": "dropdown.html#js-class"
  },
  {
    "type": "js class",
    "name": "Equalizer()",
    "description": "Creates a new instance of Equalizer.",
    "link": "equalizer.html#js-class"
  },
  {
    "type": "js class",
    "name": "Interchange()",
    "description": "Creates a new instance of Interchange.",
    "link": "interchange.html#js-class"
  },
  {
    "type": "js class",
    "name": "Magellan()",
    "description": "Creates a new instance of Magellan.",
    "link": "magellan.html#js-class"
  },
  {
    "type": "js class",
    "name": "OffCanvas()",
    "description": "Creates a new instance of an off-canvas wrapper.",
    "link": "off-canvas.html#js-class"
  },
  {
    "type": "js class",
    "name": "Orbit()",
    "description": "Creates a new instance of an orbit carousel.",
    "link": "orbit.html#js-class"
  },
  {
    "type": "js class",
    "name": "ResponsiveAccordionTabs()",
    "description": "Creates a new instance of a responsive accordion tabs.",
    "link": "responsive-accordion-tabs.html#js-class"
  },
  {
    "type": "js class",
    "name": "ResponsiveMenu()",
    "description": "Creates a new instance of a responsive menu.",
    "link": "responsive-navigation.html#js-class"
  },
  {
    "type": "js class",
    "name": "ResponsiveToggle()",
    "description": "Creates a new instance of Tab Bar.",
    "link": "responsive-navigation.html#js-class"
  },
  {
    "type": "js class",
    "name": "Reveal()",
    "description": "Creates a new instance of Reveal.",
    "link": "reveal.html#js-class"
  },
  {
    "type": "js class",
    "name": "Slider()",
    "description": "Creates a new instance of a slider control.",
    "link": "slider.html#js-class"
  },
  {
    "type": "js class",
    "name": "SmoothScroll()",
    "description": "Creates a new instance of SmoothScroll.",
    "link": "smooth-scroll.html#js-class"
  },
  {
    "type": "js class",
    "name": "Sticky()",
    "description": "Creates a new instance of a sticky thing.",
    "link": "sticky.html#js-class"
  },
  {
    "type": "js class",
    "name": "Tabs()",
    "description": "Creates a new instance of tabs.",
    "link": "tabs.html#js-class"
  },
  {
    "type": "js class",
    "name": "Toggler()",
    "description": "Creates a new instance of Toggler.",
    "link": "toggler.html#js-class"
  },
  {
    "type": "js class",
    "name": "Tooltip()",
    "description": "Creates a new instance of a Tooltip.",
    "link": "tooltip.html#js-class"
  },
  {
    "type": "js function",
    "name": "Abide#enableValidation()",
    "description": "Enables the whole validation",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#disableValidation()",
    "description": "Disables the whole validation",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#requiredCheck()",
    "description": "Checks whether or not a form element has the required attribute and if it&#39;s checked or not",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#findFormError()",
    "description": "Get:- Based on $el, the first element(s) corresponding to `formErrorSelector` in this order:\n  1. The element&#39;s direct sibling(&#39;s).\n  2. The element&#39;s parent&#39;s children.\n- Element(s) with the attribute `[data-form-error-for]` set with the element&#39;s id.\n\nThis allows for multiple form errors per input, though if none are found, no form errors will be shown.",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#findLabel()",
    "description": "Get the first element in this order:2. The &lt;label&gt; with the attribute `[for=&quot;someInputId&quot;]`\n3. The `.closest()` &lt;label&gt;",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#findRadioLabels()",
    "description": "Get the set of labels associated with a set of radio els in this order2. The &lt;label&gt; with the attribute `[for=&quot;someInputId&quot;]`\n3. The `.closest()` &lt;label&gt;",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#findCheckboxLabels()",
    "description": "Get the set of labels associated with a set of checkbox els in this order2. The &lt;label&gt; with the attribute `[for=&quot;someInputId&quot;]`\n3. The `.closest()` &lt;label&gt;",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#addErrorClasses()",
    "description": "Adds the CSS error class as specified by the Abide settings to the label, input, and the form",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#addA11yAttributes()",
    "description": "Adds [for] and [role=alert] attributes to all form error targetting $el,and [aria-describedby] attribute to $el toward the first form error.",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#addGlobalErrorA11yAttributes()",
    "description": "Adds [aria-live] attribute to the given global form error $el.",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#removeRadioErrorClasses()",
    "description": "Remove CSS error classes etc from an entire radio button group",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#removeCheckboxErrorClasses()",
    "description": "Remove CSS error classes etc from an entire checkbox group",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#removeErrorClasses()",
    "description": "Removes CSS error class as specified by the Abide settings from the label, input, and the form",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#validateInput()",
    "description": "Goes through a form to find inputs and proceeds to validate them in ways specific to their type.Ignores inputs with data-abide-ignore, type=&quot;hidden&quot; or disabled attributes set",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#validateForm()",
    "description": "Goes through a form and if there are any invalid inputs, it will display the form error element",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#validateText()",
    "description": "Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#validateRadio()",
    "description": "Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `&lt;input&gt;`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#validateCheckbox()",
    "description": "Determines whether or a not a checkbox input is valid based on whether or not it is required and checked. Although the function targets a single `&lt;input&gt;`, it validates by checking the `required` and `checked` properties of all checkboxes in its group.",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#matchValidation()",
    "description": "Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=&quot;foo bar baz&quot;` in a space separated listed.",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#resetForm()",
    "description": "Resets form inputs and styles",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "Abide#_destroy()",
    "description": "Destroys an instance of Abide.Removes error styles and classes from elements, without resetting their values.",
    "link": "abide.html#undefined"
  },
  {
    "type": "js function",
    "name": "AccordionMenu#hideAll()",
    "description": "Closes all panes of the menu.",
    "link": "accordion-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "AccordionMenu#showAll()",
    "description": "Opens all panes of the menu.",
    "link": "accordion-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "AccordionMenu#toggle()",
    "description": "Toggles the open/close state of a submenu.",
    "link": "accordion-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "AccordionMenu#down()",
    "description": "Opens the sub-menu defined by `$target`.",
    "link": "accordion-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "AccordionMenu#up()",
    "description": "Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.",
    "link": "accordion-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "AccordionMenu#_destroy()",
    "description": "Destroys an instance of accordion menu.",
    "link": "accordion-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "Accordion#toggle()",
    "description": "Toggles the selected content pane&#39;s open/close state.",
    "link": "accordion.html#undefined"
  },
  {
    "type": "js function",
    "name": "Accordion#down()",
    "description": "Opens the accordion tab defined by `$target`.",
    "link": "accordion.html#undefined"
  },
  {
    "type": "js function",
    "name": "Accordion#up()",
    "description": "Closes the tab defined by `$target`.It may be ignored if the Accordion options don&#39;t allow it.",
    "link": "accordion.html#undefined"
  },
  {
    "type": "js function",
    "name": "Accordion#_destroy()",
    "description": "Destroys an instance of an accordion.",
    "link": "accordion.html#undefined"
  },
  {
    "type": "js function",
    "name": "Drilldown#_scrollTop()",
    "description": "Scroll to Top of Element or data-scroll-top-element",
    "link": "drilldown-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "Drilldown#_hideAll()",
    "description": "Closes all open elements, and returns to root menu.",
    "link": "drilldown-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "Drilldown#_back()",
    "description": "Adds event listener for each `back` button, and closes open menus.",
    "link": "drilldown-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "Drilldown#_showMenu()",
    "description": "Opens a specific drilldown (sub)menu no matter which (sub)menu in it is currently visible.Compared to _show() this lets you jump into any submenu without clicking through every submenu on the way to it.",
    "link": "drilldown-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "Drilldown#_show()",
    "description": "Opens a submenu.",
    "link": "drilldown-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "Drilldown#_hide()",
    "description": "Hides a submenu",
    "link": "drilldown-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "Drilldown#_destroy()",
    "description": "Destroys the Drilldown Menu",
    "link": "drilldown-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "DropdownMenu#_destroy()",
    "description": "Destroys the plugin.",
    "link": "dropdown-menu.html#undefined"
  },
  {
    "type": "js function",
    "name": "Dropdown#open()",
    "description": "Opens the dropdown pane, and fires a bubbling event to close other dropdowns.",
    "link": "dropdown.html#undefined"
  },
  {
    "type": "js function",
    "name": "Dropdown#close()",
    "description": "Closes the open dropdown pane.",
    "link": "dropdown.html#undefined"
  },
  {
    "type": "js function",
    "name": "Dropdown#toggle()",
    "description": "Toggles the dropdown pane&#39;s visibility.",
    "link": "dropdown.html#undefined"
  },
  {
    "type": "js function",
    "name": "Dropdown#_destroy()",
    "description": "Destroys the dropdown.",
    "link": "dropdown.html#undefined"
  },
  {
    "type": "js function",
    "name": "Equalizer#getHeights()",
    "description": "Finds the outer heights of children contained within an Equalizer parent and returns them in an array",
    "link": "equalizer.html#undefined"
  },
  {
    "type": "js function",
    "name": "Equalizer#getHeightsByRow()",
    "description": "Finds the outer heights of children contained within an Equalizer parent and returns them in an array",
    "link": "equalizer.html#undefined"
  },
  {
    "type": "js function",
    "name": "Equalizer#applyHeight()",
    "description": "Changes the CSS height property of each child in an Equalizer parent to match the tallest",
    "link": "equalizer.html#undefined"
  },
  {
    "type": "js function",
    "name": "Equalizer#applyHeightByRow()",
    "description": "Changes the CSS height property of each child in an Equalizer parent to match the tallest by row",
    "link": "equalizer.html#undefined"
  },
  {
    "type": "js function",
    "name": "Equalizer#_destroy()",
    "description": "Destroys an instance of Equalizer.",
    "link": "equalizer.html#undefined"
  },
  {
    "type": "js function",
    "name": "Interchange#replace()",
    "description": "Update the `src` property of an image, or change the HTML of a container, to the specified path.",
    "link": "interchange.html#undefined"
  },
  {
    "type": "js function",
    "name": "Interchange#_destroy()",
    "description": "Destroys an instance of interchange.",
    "link": "interchange.html#undefined"
  },
  {
    "type": "js function",
    "name": "Magellan#calcPoints()",
    "description": "Calculates an array of pixel values that are the demarcation lines between locations on the page.Can be invoked if new elements are added or the size of a location changes.",
    "link": "magellan.html#undefined"
  },
  {
    "type": "js function",
    "name": "Magellan#scrollToLoc()",
    "description": "Function to scroll to a given location on the page.",
    "link": "magellan.html#undefined"
  },
  {
    "type": "js function",
    "name": "Magellan#reflow()",
    "description": "Calls necessary functions to update Magellan upon DOM change",
    "link": "magellan.html#undefined"
  },
  {
    "type": "js function",
    "name": "Magellan#_destroy()",
    "description": "Destroys an instance of Magellan and resets the url of the window.",
    "link": "magellan.html#undefined"
  },
  {
    "type": "js function",
    "name": "atLeast()",
    "description": "Checks if the screen is at least as wide as a breakpoint.",
    "link": "media-queries.html#undefined"
  },
  {
    "type": "js function",
    "name": "only()",
    "description": "Checks if the screen is within the given breakpoint.If smaller than the breakpoint of larger than its upper limit it returns false.",
    "link": "media-queries.html#undefined"
  },
  {
    "type": "js function",
    "name": "upTo()",
    "description": "Checks if the screen is within a breakpoint or smaller.",
    "link": "media-queries.html#undefined"
  },
  {
    "type": "js function",
    "name": "is()",
    "description": "Checks if the screen matches to a breakpoint.",
    "link": "media-queries.html#undefined"
  },
  {
    "type": "js function",
    "name": "get()",
    "description": "Gets the media query of a breakpoint.",
    "link": "media-queries.html#undefined"
  },
  {
    "type": "js function",
    "name": "next()",
    "description": "Get the breakpoint following the given breakpoint.",
    "link": "media-queries.html#undefined"
  },
  {
    "type": "js function",
    "name": "OffCanvas#reveal()",
    "description": "Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.",
    "link": "off-canvas.html#undefined"
  },
  {
    "type": "js function",
    "name": "OffCanvas#open()",
    "description": "Opens the off-canvas menu.",
    "link": "off-canvas.html#undefined"
  },
  {
    "type": "js function",
    "name": "OffCanvas#close()",
    "description": "Closes the off-canvas menu.",
    "link": "off-canvas.html#undefined"
  },
  {
    "type": "js function",
    "name": "OffCanvas#toggle()",
    "description": "Toggles the off-canvas menu open or closed.",
    "link": "off-canvas.html#undefined"
  },
  {
    "type": "js function",
    "name": "OffCanvas#_destroy()",
    "description": "Destroys the OffCanvas plugin.",
    "link": "off-canvas.html#undefined"
  },
  {
    "type": "js function",
    "name": "Orbit#geoSync()",
    "description": "Sets a `timer` object on the orbit, and starts the counter for the next slide.",
    "link": "orbit.html#undefined"
  },
  {
    "type": "js function",
    "name": "Orbit#_reset()",
    "description": "Resets Orbit so it can be reinitialized",
    "link": "orbit.html#undefined"
  },
  {
    "type": "js function",
    "name": "Orbit#changeSlide()",
    "description": "Changes the current slide to a new one.",
    "link": "orbit.html#undefined"
  },
  {
    "type": "js function",
    "name": "Orbit#_destroy()",
    "description": "Destroys the carousel and hides the element.",
    "link": "orbit.html#undefined"
  },
  {
    "type": "js function",
    "name": "ResponsiveAccordionTabs#open()",
    "description": "Opens the plugin pane defined by `target`.",
    "link": "responsive-accordion-tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "ResponsiveAccordionTabs#close()",
    "description": "Closes the plugin pane defined by `target`. Not availaible for Tabs.",
    "link": "responsive-accordion-tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "ResponsiveAccordionTabs#toggle()",
    "description": "Toggles the plugin pane defined by `target`. Not availaible for Tabs.",
    "link": "responsive-accordion-tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "ResponsiveAccordionTabs#_destroy()",
    "description": "Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.",
    "link": "responsive-accordion-tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "ResponsiveMenu#_destroy()",
    "description": "Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.",
    "link": "responsive-navigation.html#undefined"
  },
  {
    "type": "js function",
    "name": "ResponsiveToggle#toggleMenu()",
    "description": "Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.",
    "link": "responsive-navigation.html#undefined"
  },
  {
    "type": "js function",
    "name": "Reveal#_disableScroll()",
    "description": "Disables the scroll when Reveal is shown to prevent the background from shifting",
    "link": "reveal.html#undefined"
  },
  {
    "type": "js function",
    "name": "Reveal#_enableScroll()",
    "description": "Reenables the scroll when Reveal closes",
    "link": "reveal.html#undefined"
  },
  {
    "type": "js function",
    "name": "Reveal#open()",
    "description": "Opens the modal controlled by `this.$anchor`, and closes all others by default.",
    "link": "reveal.html#undefined"
  },
  {
    "type": "js function",
    "name": "Reveal#close()",
    "description": "Closes the modal.",
    "link": "reveal.html#undefined"
  },
  {
    "type": "js function",
    "name": "Reveal#toggle()",
    "description": "Toggles the open/closed state of a modal.",
    "link": "reveal.html#undefined"
  },
  {
    "type": "js function",
    "name": "Reveal#_destroy()",
    "description": "Destroys an instance of a modal.",
    "link": "reveal.html#undefined"
  },
  {
    "type": "js function",
    "name": "Slider#_destroy()",
    "description": "Destroys the slider plugin.",
    "link": "slider.html#undefined"
  },
  {
    "type": "js function",
    "name": "SmoothScroll.scrollToLoc()",
    "description": "Function to scroll to a given location on the page.",
    "link": "smooth-scroll.html#scrollToLoc"
  },
  {
    "type": "js function",
    "name": "SmoothScroll#_destroy()",
    "description": "Destroys the SmoothScroll instance.",
    "link": "smooth-scroll.html#undefined"
  },
  {
    "type": "js function",
    "name": "Sticky#_pauseListeners()",
    "description": "Removes event handlers for scroll and change events on anchor.",
    "link": "sticky.html#undefined"
  },
  {
    "type": "js function",
    "name": "Sticky#_calc()",
    "description": "Called on every `scroll` event and on `_init`fires functions based on booleans and cached values",
    "link": "sticky.html#undefined"
  },
  {
    "type": "js function",
    "name": "Sticky#_destroy()",
    "description": "Destroys the current sticky element.Resets the element to the top position first.\nRemoves event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.",
    "link": "sticky.html#undefined"
  },
  {
    "type": "js function",
    "name": "emCalc()",
    "description": "Helper function to calculate em values",
    "link": "sticky.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tabs#_handleTabChange()",
    "description": "Opens the tab `$targetContent` defined by `$target`. Collapses active tab.",
    "link": "tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tabs#_openTab()",
    "description": "Opens the tab `$targetContent` defined by `$target`.",
    "link": "tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tabs#_collapseTab()",
    "description": "Collapses `$targetContent` defined by `$target`.",
    "link": "tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tabs#_collapse()",
    "description": "Collapses the active Tab.",
    "link": "tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tabs#selectTab()",
    "description": "Public method for selecting a content pane to display.",
    "link": "tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tabs#_destroy()",
    "description": "Destroys an instance of tabs.",
    "link": "tabs.html#undefined"
  },
  {
    "type": "js function",
    "name": "Toggler#toggle()",
    "description": "Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was &quot;on&quot; or &quot;off&quot;.",
    "link": "toggler.html#undefined"
  },
  {
    "type": "js function",
    "name": "Toggler#_destroy()",
    "description": "Destroys the instance of Toggler on the element.",
    "link": "toggler.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tooltip#show()",
    "description": "reveals the tooltip, and fires an event to close any other open tooltips on the page",
    "link": "tooltip.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tooltip#hide()",
    "description": "Hides the current tooltip, and resets the positioning class if it was changed due to collision",
    "link": "tooltip.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tooltip#toggle()",
    "description": "adds a toggle method, in addition to the static show() &amp; hide() functions",
    "link": "tooltip.html#undefined"
  },
  {
    "type": "js function",
    "name": "Tooltip#_destroy()",
    "description": "Destroys an instance of tooltip, removes template element from the view.",
    "link": "tooltip.html#undefined"
  },
  {
    "type": "js plugin option",
    "name": "validateOn",
    "description": "The default event to validate inputs. Checkboxes and radios validate immediately.Remove or change this value for manual validation.",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "labelErrorClass",
    "description": "Class to be applied to input labels on failed validation.",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "inputErrorClass",
    "description": "Class to be applied to inputs on failed validation.",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "formErrorSelector",
    "description": "Class selector to use to target Form Errors for show/hide.",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "formErrorClass",
    "description": "Class added to Form Errors on failed validation.",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "a11yAttributes",
    "description": "If true, automatically insert when possible:- `[aria-describedby]` on fields\n- `[role=alert]` on form errors and `[for]` on form error labels\n- `[aria-live]` on global errors `[data-abide-error]` (see option `a11yErrorLevel`).",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "a11yErrorLevel",
    "description": "[aria-live] attribute value to be applied on global errors `[data-abide-error]`.Options are: &#39;assertive&#39;, &#39;polite&#39; and &#39;off&#39;/null",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "liveValidate",
    "description": "Set to true to validate text inputs on any value change.",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "validateOnBlur",
    "description": "Set to true to validate inputs on blur.",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "validators",
    "description": "Optional validation functions to be used. `equalTo` being the only default included function.Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\nel : The jQuery element to validate.",
    "link": "abide.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "parentLink",
    "description": "Adds the parent link to the submenu.",
    "link": "accordion-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "slideSpeed",
    "description": "Amount of time to animate the opening of a submenu in ms.",
    "link": "accordion-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "submenuToggle",
    "description": "Adds a separate submenu toggle button. This allows the parent item to have a link.",
    "link": "accordion-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "submenuToggleText",
    "description": "The text used for the submenu toggle if enabled. This is used for screen readers only.",
    "link": "accordion-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "multiOpen",
    "description": "Allow the menu to have multiple open panes.",
    "link": "accordion-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "slideSpeed",
    "description": "Amount of time to animate the opening of an accordion pane.",
    "link": "accordion.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "multiExpand",
    "description": "Allow the accordion to have multiple open panes.",
    "link": "accordion.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "allowAllClosed",
    "description": "Allow the accordion to close all panes.",
    "link": "accordion.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLink",
    "description": "Link the location hash to the open pane.Set the location hash when the opened pane changes, and open and scroll to the corresponding pane when the location changes.",
    "link": "accordion.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLinkSmudge",
    "description": "If `deepLink` is enabled, adjust the deep link scroll to make sure the top of the accordion panel is visible",
    "link": "accordion.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLinkSmudgeDelay",
    "description": "If `deepLinkSmudge` is enabled, animation time (ms) for the deep link adjustment",
    "link": "accordion.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLinkSmudgeOffset",
    "description": "If `deepLinkSmudge` is enabled, the offset for scrollToTtop to prevent overlap by a sticky element at the top of the page",
    "link": "accordion.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "updateHistory",
    "description": "If `deepLink` is enabled, update the browser history with the open accordion",
    "link": "accordion.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "autoApplyClass",
    "description": "Drilldowns depend on styles in order to function properly; in the default build of Foundation these areon the `drilldown` class. This option auto-applies this class to the drilldown upon initialization.",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "backButton",
    "description": "Markup used for JS generated back button. Prepended  or appended (see backButtonPosition) to submenu lists and deleted on `destroy` method, &#39;js-drilldown-back&#39; class required. Remove the backslash (`\\`) if copy and pasting.",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "backButtonPosition",
    "description": "Position the back button either at the top or bottom of drilldown submenus. Can be `&#39;left&#39;` or `&#39;bottom&#39;`.",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "wrapper",
    "description": "Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "parentLink",
    "description": "Adds the parent link to the submenu.",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "closeOnClick",
    "description": "Allow the menu to return to root list on body click.",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "autoHeight",
    "description": "Allow the menu to auto adjust height.",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animateHeight",
    "description": "Animate the auto adjust height.",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "scrollTop",
    "description": "Scroll to the top of the menu after opening a submenu or navigating back using the menu back button",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "scrollTopElement",
    "description": "String jquery selector (for example &#39;body&#39;) of element to take offset().top from, if empty string the drilldown menu offset().top is taken",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "scrollTopOffset",
    "description": "ScrollTop offset",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animationDuration",
    "description": "Scroll animation duration",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animationEasing",
    "description": "Scroll animation easing. Can be `&#39;swing&#39;` or `&#39;linear&#39;`.",
    "link": "drilldown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "disableHover",
    "description": "Disallows hover events from opening submenus",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "disableHoverOnTouch",
    "description": "Disallows hover on touch devices",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "autoclose",
    "description": "Allow a submenu to automatically close on a mouseleave event, if not clicked open.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hoverDelay",
    "description": "Amount of time to delay opening a submenu on hover event.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "clickOpen",
    "description": "Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "closingTime",
    "description": "Amount of time to delay closing a submenu on a mouseleave event.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "alignment",
    "description": "Position of the menu relative to what direction the submenus should open. Handled by JS. Can be `&#39;auto&#39;`, `&#39;left&#39;` or `&#39;right&#39;`.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "closeOnClick",
    "description": "Allow clicks on the body to close any open submenus.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "closeOnClickInside",
    "description": "Allow clicks on leaf anchor links to close any open submenus.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "verticalClass",
    "description": "Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "rightClass",
    "description": "Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "forceFollow",
    "description": "Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.",
    "link": "dropdown-menu.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "parentClass",
    "description": "Class that designates bounding container of Dropdown (default: window)",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hoverDelay",
    "description": "Amount of time to delay opening a submenu on hover event.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hover",
    "description": "Allow submenus to open on hover events",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hoverPane",
    "description": "Don&#39;t close dropdown when hovering over dropdown pane",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "vOffset",
    "description": "Number of pixels between the dropdown pane and the triggering element on open.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hOffset",
    "description": "Number of pixels between the dropdown pane and the triggering element on open.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "position",
    "description": "Position of dropdown. Can be left, right, bottom, top, or auto.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "alignment",
    "description": "Alignment of dropdown relative to anchor. Can be left, right, bottom, top, center, or auto.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "allowOverlap",
    "description": "Allow overlap of container/window. If false, dropdown will first try to position as defined by data-position and data-alignment, but reposition if it would cause an overflow.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "allowBottomOverlap",
    "description": "Allow overlap of only the bottom of the container. This is the most commonbehavior for dropdowns, allowing the dropdown to extend the bottom of the\nscreen but not otherwise influence or break out of the container.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "trapFocus",
    "description": "Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "autoFocus",
    "description": "Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "closeOnClick",
    "description": "Allows a click on the body to close the dropdown.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "forceFollow",
    "description": "If true the default action of the toggle (e.g. follow a link with href) gets executed on click. If hover option is also true the default action gets prevented on first click for mobile / touch devices and executed on second click.",
    "link": "dropdown.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "equalizeOnStack",
    "description": "Enable height equalization when stacked on smaller screens.",
    "link": "equalizer.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "equalizeByRow",
    "description": "Enable height equalization row by row.",
    "link": "equalizer.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "equalizeOn",
    "description": "String representing the minimum breakpoint size the plugin should equalize heights on.",
    "link": "equalizer.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "rules",
    "description": "Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.",
    "link": "interchange.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "type",
    "description": "Type of the responsive ressource to replace. It can take the following options:- `auto` (default): choose the type according to the element tag or the ressource extension,\n- `src`: replace the `[src]` attribute, recommended for images `&lt;img&gt;`.\n- `background`: replace the `background-image` CSS property.\n- `html`: replace the element content.",
    "link": "interchange.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animationDuration",
    "description": "Amount of time, in ms, the animated scrolling should take between locations.",
    "link": "magellan.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animationEasing",
    "description": "Animation style to use when scrolling between locations. Can be `&#39;swing&#39;` or `&#39;linear&#39;`.",
    "link": "magellan.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "threshold",
    "description": "Number of pixels to use as a marker for location changes.",
    "link": "magellan.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "activeClass",
    "description": "Class applied to the active locations link on the magellan container.",
    "link": "magellan.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLinking",
    "description": "Allows the script to manipulate the url of the current page, and if supported, alter the history.",
    "link": "magellan.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "updateHistory",
    "description": "Update the browser history with the active link, if deep linking is enabled.",
    "link": "magellan.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "offset",
    "description": "Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.",
    "link": "magellan.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "closeOnClick",
    "description": "Allow the user to click outside of the menu to close it.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "contentOverlay",
    "description": "Adds an overlay on top of `[data-off-canvas-content]`.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "contentId",
    "description": "Target an off-canvas content container by ID that may be placed anywhere. If null the closest content container will be taken.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "nested",
    "description": "Define the off-canvas element is nested in an off-canvas content. This is required when using the contentId option for a nested element.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "contentScroll",
    "description": "Enable/disable scrolling of the main content when an off canvas panel is open.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "transitionTime",
    "description": "Amount of time the open and close transition requires, including the appropriate milliseconds (`ms`) or seconds (`s`) unit (e.g. `500ms`, `.75s`) If none selected, pulls from body style.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "transition",
    "description": "Type of transition for the OffCanvas menu. Options are &#39;push&#39;, &#39;detached&#39; or &#39;slide&#39;.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "forceTo",
    "description": "Force the page to scroll to top or bottom on open.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "isRevealed",
    "description": "Allow the OffCanvas to remain open for certain breakpoints.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "revealOn",
    "description": "Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "inCanvasOn",
    "description": "Breakpoint at which the off-canvas gets moved into canvas content and acts as regular page element.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "autoFocus",
    "description": "Force focus to the offcanvas on open. If true, will focus the opening trigger on close.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "revealClass",
    "description": "Class used to force an OffCanvas to remain open. Foundation defaults for this are `reveal-for-large` &amp; `reveal-for-medium`.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "trapFocus",
    "description": "Triggers optional focus trapping when opening an OffCanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.",
    "link": "off-canvas.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "bullets",
    "description": "Tells the JS to look for and loadBullets.",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "navButtons",
    "description": "Tells the JS to apply event listeners to nav buttons",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animInFromRight",
    "description": "motion-ui animation class to apply",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animOutToRight",
    "description": "motion-ui animation class to apply",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animInFromLeft",
    "description": "motion-ui animation class to apply",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animOutToLeft",
    "description": "motion-ui animation class to apply",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "autoPlay",
    "description": "Allows Orbit to automatically animate on page load.",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "timerDelay",
    "description": "Amount of time, in ms, between slide transitions",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "infiniteWrap",
    "description": "Allows Orbit to infinitely loop through the slides",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "swipe",
    "description": "Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "pauseOnHover",
    "description": "Allows the timing function to pause animation on hover.",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "accessible",
    "description": "Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "containerClass",
    "description": "Class applied to the container of Orbit",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "slideClass",
    "description": "Class applied to individual slides.",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "boxOfBullets",
    "description": "Class applied to the bullet container. You&#39;re welcome.",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "nextClass",
    "description": "Class applied to the `next` navigation button.",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "prevClass",
    "description": "Class applied to the `previous` navigation button.",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "useMUI",
    "description": "Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatibility.",
    "link": "orbit.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hideFor",
    "description": "The breakpoint after which the menu is always shown, and the tab bar is hidden.",
    "link": "responsive-navigation.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animate",
    "description": "To decide if the toggle should be animated or not.",
    "link": "responsive-navigation.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animationIn",
    "description": "Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animationOut",
    "description": "Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "showDelay",
    "description": "Time, in ms, to delay the opening of a modal after a click if no animation used.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hideDelay",
    "description": "Time, in ms, to delay the closing of a modal after a click if no animation used.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "closeOnClick",
    "description": "Allows a click on the body/overlay to close the modal.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "closeOnEsc",
    "description": "Allows the modal to close if the user presses the `ESCAPE` key.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "multipleOpened",
    "description": "If true, allows multiple modals to be displayed at once.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "vOffset",
    "description": "Distance, in pixels, the modal should push down from the top of the screen.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hOffset",
    "description": "Distance, in pixels, the modal should push in from the side of the screen.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "fullScreen",
    "description": "Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "overlay",
    "description": "Allows the modal to generate an overlay div, which will cover the view when modal opens.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "resetOnClose",
    "description": "Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider&#39;s api, otherwise, videos will continue to play in the background.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLink",
    "description": "Link the location hash to the modal.Set the location hash when the modal is opened/closed, and open/close the modal when the location changes.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "updateHistory",
    "description": "If `deepLink` is enabled, update the browser history with the open modal",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "appendTo",
    "description": "Allows the modal to append to custom div.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "additionalOverlayClasses",
    "description": "Allows adding additional class names to the reveal overlay.",
    "link": "reveal.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "start",
    "description": "Minimum value for the slider scale.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "end",
    "description": "Maximum value for the slider scale.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "step",
    "description": "Minimum value change per change event.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "initialStart",
    "description": "Value at which the handle/input *(left handle/first input)* should be set to on initialization.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "initialEnd",
    "description": "Value at which the right handle/second input should be set to on initialization.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "binding",
    "description": "Allows the input to be located outside the container and visible. Set to by the JS",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "clickSelect",
    "description": "Allows the user to click/tap on the slider bar to select a value.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "vertical",
    "description": "Set to true and use the `vertical` class to change alignment to vertical.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "draggable",
    "description": "Allows the user to drag the slider handle(s) to select a value.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "disabled",
    "description": "Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "doubleSided",
    "description": "Allows the use of two handles. Double checked by the JS. Changes some logic handling.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "decimal",
    "description": "Number of decimal places the plugin should go to for floating point precision.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "moveTime",
    "description": "Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "disabledClass",
    "description": "Class applied to disabled sliders.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "invertVertical",
    "description": "Will invert the default layout for a vertical&lt;span data-tooltip title=&quot;who would do this???&quot;&gt; &lt;/span&gt;slider.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "changedDelay",
    "description": "Milliseconds before the `changed.zf-slider` event is triggered after value change.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "nonLinearBase",
    "description": "Basevalue for non-linear sliders",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "positionValueFunction",
    "description": "Basevalue for non-linear sliders, possible values are: `&#39;linear&#39;`, `&#39;pow&#39;` &amp; `&#39;log&#39;`. Pow and Log use the nonLinearBase setting.",
    "link": "slider.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animationDuration",
    "description": "Amount of time, in ms, the animated scrolling should take between locations.",
    "link": "smooth-scroll.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animationEasing",
    "description": "Animation style to use when scrolling between locations. Can be `&#39;swing&#39;` or `&#39;linear&#39;`.",
    "link": "smooth-scroll.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "threshold",
    "description": "Number of pixels to use as a marker for location changes.",
    "link": "smooth-scroll.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "offset",
    "description": "Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.",
    "link": "smooth-scroll.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "container",
    "description": "Customizable container template. Add your own classes for styling and sizing.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "stickTo",
    "description": "Location in the view the element sticks to. Can be `&#39;top&#39;` or `&#39;bottom&#39;`.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "anchor",
    "description": "If anchored to a single element, the id of that element.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "topAnchor",
    "description": "If using more than one element as anchor points, the id of the top anchor.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "btmAnchor",
    "description": "If using more than one element as anchor points, the id of the bottom anchor.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "marginTop",
    "description": "Margin, in `em`&#39;s to apply to the top of the element when it becomes sticky.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "marginBottom",
    "description": "Margin, in `em`&#39;s to apply to the bottom of the element when it becomes sticky.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "stickyOn",
    "description": "Breakpoint string that is the minimum screen size an element should become sticky.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "stickyClass",
    "description": "Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "containerClass",
    "description": "Class applied to sticky container. Foundation defaults to `sticky-container`.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "dynamicHeight",
    "description": "If true (by default), keep the sticky container the same height as the element. Otherwise, the container height is set once and does not change.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "checkEvery",
    "description": "Number of scroll events between the plugin&#39;s recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.",
    "link": "sticky.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLink",
    "description": "Link the location hash to the active pane.Set the location hash when the active pane changes, and open the corresponding pane when the location changes.",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLinkSmudge",
    "description": "If `deepLink` is enabled, adjust the deep link scroll to make sure the top of the tab panel is visible",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLinkSmudgeDelay",
    "description": "If `deepLinkSmudge` is enabled, animation time (ms) for the deep link adjustment",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "deepLinkSmudgeOffset",
    "description": "If `deepLinkSmudge` is enabled, animation offset from the top for the deep link adjustment",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "updateHistory",
    "description": "If `deepLink` is enabled, update the browser history with the open tab",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "autoFocus",
    "description": "Allows the window to scroll to content of active pane on load.Not recommended if more than one tab panel per page.",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "wrapOnKeys",
    "description": "Allows keyboard input to &#39;wrap&#39; around the tab links.",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "matchHeight",
    "description": "Allows the tab content panes to match heights if set to true.",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "activeCollapse",
    "description": "Allows active tabs to collapse when clicked.",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "linkClass",
    "description": "Class applied to `li`&#39;s in tab link list.",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "linkActiveClass",
    "description": "Class applied to the active `li` in tab link list.",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "panelClass",
    "description": "Class applied to the content containers.",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "panelActiveClass",
    "description": "Class applied to the active content container.",
    "link": "tabs.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "toggler",
    "description": "Class of the element to toggle. It can be provided with or without &quot;.&quot;",
    "link": "toggler.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "animate",
    "description": "Tells the plugin if the element should animated when toggled.",
    "link": "toggler.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hoverDelay",
    "description": "Time, in ms, before a tooltip should open on hover.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "fadeInDuration",
    "description": "Time, in ms, a tooltip should take to fade into view.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "fadeOutDuration",
    "description": "Time, in ms, a tooltip should take to fade out of view.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "disableHover",
    "description": "Disables hover events from opening the tooltip if set to true",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "disableForTouch",
    "description": "Disable the tooltip for touch devices.This can be useful to make elements with a tooltip on it trigger their\naction on the first tap instead of displaying the tooltip.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "templateClasses",
    "description": "Optional addtional classes to apply to the tooltip template on init.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "tooltipClass",
    "description": "Non-optional class added to tooltip templates. Foundation default is &#39;tooltip&#39;.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "triggerClass",
    "description": "Class applied to the tooltip anchor element.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "showOn",
    "description": "Minimum breakpoint size at which to open the tooltip.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "template",
    "description": "Custom template to be used to generate markup for tooltip.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "tipText",
    "description": "Text displayed in the tooltip template on open.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "clickOpen",
    "description": "Allows the tooltip to remain open if triggered with a click or touch event.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "position",
    "description": "Position of tooltip. Can be left, right, bottom, top, or auto.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "alignment",
    "description": "Alignment of tooltip relative to anchor. Can be left, right, bottom, top, center, or auto.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "allowOverlap",
    "description": "Allow overlap of container/window. If false, tooltip will first try toposition as defined by data-position and data-alignment, but reposition if\nit would cause an overflow.  @option",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "allowBottomOverlap",
    "description": "Allow overlap of only the bottom of the container. This is the most commonbehavior for dropdowns, allowing the dropdown to extend the bottom of the\nscreen but not otherwise influence or break out of the container.\nLess common for tooltips.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "vOffset",
    "description": "Distance, in pixels, the template should push away from the anchor on the Y axis.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "hOffset",
    "description": "Distance, in pixels, the template should push away from the anchor on the X axis",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "tooltipHeight",
    "description": "Distance, in pixels, the template spacing auto-adjust for a vertical tooltip",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "tooltipWidth",
    "description": "Distance, in pixels, the template spacing auto-adjust for a horizontal tooltip",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js plugin option",
    "name": "allowHtml",
    "description": "Allow HTML in tooltip. Warning: If you are loading user-generated content into tooltips,allowing HTML may open yourself up to XSS attacks.",
    "link": "tooltip.html#js-members"
  },
  {
    "type": "js event",
    "name": "invalid",
    "description": "Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`Trigger includes the DOM element of the input.",
    "link": "abide.html#js-events"
  },
  {
    "type": "js event",
    "name": "forminvalid",
    "description": "Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.Trigger includes the element of the form.",
    "link": "abide.html#js-events"
  },
  {
    "type": "js event",
    "name": "formreset",
    "description": "Fires when the form has been reset.",
    "link": "abide.html#js-events"
  },
  {
    "type": "js event",
    "name": "down",
    "description": "Fires when the menu is done opening.",
    "link": "accordion-menu.html#js-events"
  },
  {
    "type": "js event",
    "name": "up",
    "description": "Fires when the menu is done collapsing up.",
    "link": "accordion-menu.html#js-events"
  },
  {
    "type": "js event",
    "name": "deeplink",
    "description": "Fires when the plugin has deeplinked at pageload",
    "link": "accordion.html#js-events"
  },
  {
    "type": "js event",
    "name": "down",
    "description": "Fires when the tab is done opening.",
    "link": "accordion.html#js-events"
  },
  {
    "type": "js event",
    "name": "up",
    "description": "Fires when the tab is done collapsing up.",
    "link": "accordion.html#js-events"
  },
  {
    "type": "js event",
    "name": "scrollme",
    "description": "Fires after the menu has scrolled",
    "link": "drilldown-menu.html#js-events"
  },
  {
    "type": "js event",
    "name": "close",
    "description": "Fires when the menu is closing.",
    "link": "drilldown-menu.html#js-events"
  },
  {
    "type": "js event",
    "name": "closed",
    "description": "Fires when the menu is fully closed.",
    "link": "drilldown-menu.html#js-events"
  },
  {
    "type": "js event",
    "name": "open",
    "description": "Fires when the submenu has opened.",
    "link": "drilldown-menu.html#js-events"
  },
  {
    "type": "js event",
    "name": "hide",
    "description": "Fires when the submenu has closed.",
    "link": "drilldown-menu.html#js-events"
  },
  {
    "type": "js event",
    "name": "show",
    "description": "Fires when the new dropdown pane is visible.",
    "link": "dropdown-menu.html#js-events"
  },
  {
    "type": "js event",
    "name": "hide",
    "description": "Fires when the open menus are closed.",
    "link": "dropdown-menu.html#js-events"
  },
  {
    "type": "js event",
    "name": "closeme",
    "description": "Fires to close other open dropdowns, typically when dropdown is opening",
    "link": "dropdown.html#js-events"
  },
  {
    "type": "js event",
    "name": "show",
    "description": "Fires once the dropdown is visible.",
    "link": "dropdown.html#js-events"
  },
  {
    "type": "js event",
    "name": "hide",
    "description": "Fires once the dropdown is no longer visible.",
    "link": "dropdown.html#js-events"
  },
  {
    "type": "js event",
    "name": "preequalized",
    "description": "Fires before the heights are applied",
    "link": "equalizer.html#js-events"
  },
  {
    "type": "js event",
    "name": "postequalized",
    "description": "Fires when the heights have been applied",
    "link": "equalizer.html#js-events"
  },
  {
    "type": "js event",
    "name": "preequalizedrow",
    "description": "Fires before the heights per row are applied",
    "link": "equalizer.html#js-events"
  },
  {
    "type": "js event",
    "name": "postequalizedrow",
    "description": "Fires when the heights per row have been applied",
    "link": "equalizer.html#js-events"
  },
  {
    "type": "js event",
    "name": "update",
    "description": "Fires when magellan is finished updating to the new active element.",
    "link": "magellan.html#js-events"
  },
  {
    "type": "js event",
    "name": "opened",
    "description": "Fires when the off-canvas menu opens.",
    "link": "off-canvas.html#js-events"
  },
  {
    "type": "js event",
    "name": "openedEnd",
    "description": "Fires when the off-canvas menu open transition is done.",
    "link": "off-canvas.html#js-events"
  },
  {
    "type": "js event",
    "name": "close",
    "description": "Fires when the off-canvas menu closes.",
    "link": "off-canvas.html#js-events"
  },
  {
    "type": "js event",
    "name": "closed",
    "description": "Fires when the off-canvas menu close transition is done.",
    "link": "off-canvas.html#js-events"
  },
  {
    "type": "js event",
    "name": "beforeslidechange",
    "description": "Triggers before the next slide starts animating in and only if a next slide has been found.",
    "link": "orbit.html#js-events"
  },
  {
    "type": "js event",
    "name": "slidechange",
    "description": "Triggers when the slide has finished animating in.",
    "link": "orbit.html#js-events"
  },
  {
    "type": "js event",
    "name": "toggled",
    "description": "Fires when the element attached to the tab bar toggles.",
    "link": "responsive-navigation.html#js-events"
  },
  {
    "type": "js event",
    "name": "closeme",
    "description": "Fires immediately before the modal opens.Closes any other modals that are currently open",
    "link": "reveal.html#js-events"
  },
  {
    "type": "js event",
    "name": "open",
    "description": "Fires when the modal has successfully opened.",
    "link": "reveal.html#js-events"
  },
  {
    "type": "js event",
    "name": "closed",
    "description": "Fires when the modal is done closing.",
    "link": "reveal.html#js-events"
  },
  {
    "type": "js event",
    "name": "moved",
    "description": "Fires when the handle is done moving.",
    "link": "slider.html#js-events"
  },
  {
    "type": "js event",
    "name": "changed",
    "description": "Fires when the value has not been change for a given time.",
    "link": "slider.html#js-events"
  },
  {
    "type": "js event",
    "name": "deeplink",
    "description": "Fires when the plugin has deeplinked at pageload",
    "link": "tabs.html#js-events"
  },
  {
    "type": "js event",
    "name": "change",
    "description": "Fires when the plugin has successfully changed tabs.",
    "link": "tabs.html#js-events"
  },
  {
    "type": "js event",
    "name": "collapse",
    "description": "Fires when the plugin has successfully collapsed tabs.",
    "link": "tabs.html#js-events"
  },
  {
    "type": "js event",
    "name": "on",
    "description": "Fires if the target element has the class after a toggle.",
    "link": "toggler.html#js-events"
  },
  {
    "type": "js event",
    "name": "off",
    "description": "Fires if the target element does not have the class after a toggle.",
    "link": "toggler.html#js-events"
  },
  {
    "type": "js event",
    "name": "tooltip",
    "description": "Fires to close all other open tooltips on the page",
    "link": "tooltip.html#js-events"
  },
  {
    "type": "js event",
    "name": "show",
    "description": "Fires when the tooltip is shown",
    "link": "tooltip.html#js-events"
  },
  {
    "type": "js event",
    "name": "hide",
    "description": "fires when the tooltip is hidden",
    "link": "tooltip.html#js-events"
  }
]